.globl	constructor
.public	constructor
.type	constructor, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
;; constructor protection
GETGLOB 6
THROWIF 51
PUSHINT 1
SETGLOB 6
;; end constructor protection
; Decode input parameters
; Decode debotAbi
LDREF
; Decode DexRootAddress
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: debotAbi
;; param: DexRootAddress
; constructor DEXDebot
GETGLOB 2
;; ==
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
EQUAL
THROWIFNOT 100
ACCEPT
PUSHINT 0
NEWC
ENDC
NEWC
ENDC
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
CALL $init_internal$
; expValue
; end expValue
;; push identifier DexRootAddress
DUP
; colValue
SETGLOB 19
; end colValue
DROP2
; end constructor DEXDebot
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setABI
.public	setABI
.type	setABI, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode dabi
LDREF
ENDS
;; param: dabi
; function setABI
GETGLOB 2
;; ==
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
EQUAL
THROWIFNOT 100
ACCEPT
; expValue
; end expValue
;; push identifier dabi
DUP
; colValue
SETGLOB 11
; end colValue
PUSHINT 1
; expValue
;; fetch m_options
GETGLOB 10
; end expValue
SWAP
OR
; colValue
SETGLOB 10
; end colValue
DROP
; end function setABI
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setABI_internal
.type	setABI_internal, @function
;; param: dabi
; function setABI
GETGLOB 2
;; ==
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
EQUAL
THROWIFNOT 100
ACCEPT
; expValue
; end expValue
;; push identifier dabi
DUP
; colValue
SETGLOB 11
; end colValue
PUSHINT 1
; expValue
;; fetch m_options
GETGLOB 10
; end expValue
SWAP
OR
; colValue
SETGLOB 10
; end colValue
DROP
; end function setABI

.globl	start
.public	start
.type	start, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; function start
NEWC
ENDC
PUSHSLICE x57656c636f6d6520746f2052616469616e636520444558204c69717569646974792050726f7669646572206465626f7420696e746572666163652e
NEWC
STSLICE
ENDC
PUSHINT 2
NEWDICT
PUSHSLICE x4c6f6720696e746f20796f7572206578697374696e6720636c69656e742077616c6c6574
NEWC
STSLICE
ENDC
NEWC
ENDC
PUSHINT 951733323
TUPLE 3
UNTUPLE 3
NEWC
PUSH S3
STREFR
PUSH S2
STREFR
PUSH S1
STUR 32
XCHG s3
BLKDROP 3
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x45786974
NEWC
STSLICE
ENDC
NEWC
ENDC
PUSHINT 0
TUPLE 3
UNTUPLE 3
NEWC
PUSH S3
STREFR
PUSH S2
STREFR
PUSH S1
STUR 32
XCHG s3
BLKDROP 3
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PAIR
CALL $Menu_no_obj_select$
; end function start
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	start_internal
.type	start_internal, @function
; function start
NEWC
ENDC
PUSHSLICE x57656c636f6d6520746f2052616469616e636520444558204c69717569646974792050726f7669646572206465626f7420696e746572666163652e
NEWC
STSLICE
ENDC
PUSHINT 2
NEWDICT
PUSHSLICE x4c6f6720696e746f20796f7572206578697374696e6720636c69656e742077616c6c6574
NEWC
STSLICE
ENDC
NEWC
ENDC
PUSHINT 951733323
TUPLE 3
UNTUPLE 3
NEWC
PUSH S3
STREFR
PUSH S2
STREFR
PUSH S1
STUR 32
XCHG s3
BLKDROP 3
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x45786974
NEWC
STSLICE
ENDC
NEWC
ENDC
PUSHINT 0
TUPLE 3
UNTUPLE 3
NEWC
PUSH S3
STREFR
PUSH S2
STREFR
PUSH S1
STUR 32
XCHG s3
BLKDROP 3
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PAIR
CALL $Menu_no_obj_select$
; end function start

.globl	selectWallet
.public	selectWallet
.type	selectWallet, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode index
LDU 32
ENDS
;; param: index
; function selectWallet
PUSHINT 0
PUSHSLICE x456e74657220796f757220636c69656e742061646472657373
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
PUSHINT 2008112718
CALL $AddressInput_no_obj_select$
DROP
; end function selectWallet
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	selectWallet_internal
.type	selectWallet_internal, @function
;; param: index
; function selectWallet
PUSHINT 0
PUSHSLICE x456e74657220796f757220636c69656e742061646472657373
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
PUSHINT 2008112718
CALL $AddressInput_no_obj_select$
DROP
; end function selectWallet

.globl	setWalletAddress
.public	setWalletAddress
.type	setWalletAddress, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode value
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: value
; function setWalletAddress
; expValue
; end expValue
;; push identifier value
DUP
; colValue
SETGLOB 16
; end colValue
PUSHINT 498369253
NEWC
ENDC
CALL $Terminal_no_obj_print$
DROP
; end function setWalletAddress
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setWalletAddress_internal
.type	setWalletAddress_internal, @function
;; param: value
; function setWalletAddress
; expValue
; end expValue
;; push identifier value
DUP
; colValue
SETGLOB 16
; end colValue
PUSHINT 498369253
NEWC
ENDC
CALL $Terminal_no_obj_print$
DROP
; end function setWalletAddress

.globl	getClientDataPRE
.public	getClientDataPRE
.type	getClientDataPRE, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode index
LDU 32
ENDS
;; param: index
; function getClientDataPRE
PUSHINT 498369253
NEWC
ENDC
CALL $Terminal_no_obj_print$
DROP
; end function getClientDataPRE
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getClientDataPRE_internal
.type	getClientDataPRE_internal, @function
;; param: index
; function getClientDataPRE
PUSHINT 498369253
NEWC
ENDC
CALL $Terminal_no_obj_print$
DROP
; end function getClientDataPRE

.globl	getClientData
.public	getClientData
.type	getClientData, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; function getClientData
NULL
;; decl: pubkey
;; Remote call IDEXclient.getAllDataPreparation
;; push identifier m_Client
GETGLOB 16
NEWC
STSLICECONST x497_
PUSHINT 1124939687
STUR 32
PUSHINT 1184379414
STUR 32
PUSHINT 2
STUR 8
STONE
STONE
STONE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 4
STZEROES
STSLICECONST 0
PUSHINT 2
STZEROES
;; push identifier pubkey
PUSH S1
ISNULL
PUSHCONT {
	STSLICECONST 0
}
PUSHCONT {
	THROW 64
	STSLICECONST 1
	;; push identifier pubkey
	PUSH S1
	STUR 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x1516b1f8
ENDC
PUSHINT 1
SENDRAWMSG
DROP
; end function getClientData
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getClientData_internal
.type	getClientData_internal, @function
; function getClientData
NULL
;; decl: pubkey
;; Remote call IDEXclient.getAllDataPreparation
;; push identifier m_Client
GETGLOB 16
NEWC
STSLICECONST x497_
PUSHINT 1124939687
STUR 32
PUSHINT 1184379414
STUR 32
PUSHINT 2
STUR 8
STONE
STONE
STONE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 4
STZEROES
STSLICECONST 0
PUSHINT 2
STZEROES
;; push identifier pubkey
PUSH S1
ISNULL
PUSHCONT {
	STSLICECONST 0
}
PUSHCONT {
	THROW 64
	STSLICECONST 1
	;; push identifier pubkey
	PUSH S1
	STUR 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x1516b1f8
ENDC
PUSHINT 1
SENDRAWMSG
DROP
; end function getClientData

.globl	setBalance
.public	setBalance
.type	setBalance, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode nanotokens
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
ENDS
;; param: nanotokens
; function setBalance
; expValue
; end expValue
;; push identifier nanotokens
DUP
; colValue
SETGLOB 15
; end colValue
DROP
; end function setBalance
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setBalance_internal
.type	setBalance_internal, @function
;; param: nanotokens
; function setBalance
; expValue
; end expValue
;; push identifier nanotokens
DUP
; colValue
SETGLOB 15
; end colValue
DROP
; end function setBalance

.globl	setClientData
.public	setClientData
.type	setClientData, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode pairKeysR
LDU 32
LDDICT
ROTREV
PAIR
SWAP
; Decode walletKeysR
LDU 32
LDDICT
ROTREV
PAIR
SWAP
ENDS
;; param: pairKeysR
;; param: walletKeysR
; function setClientData
; expValue
; end expValue
;; push identifier pairKeysR
PUSH S1
; colValue
SETGLOB 20
; end colValue
; expValue
; end expValue
;; push identifier walletKeysR
DUP
; colValue
SETGLOB 22
; end colValue
PUSHINT 281329239
;; push identifier m_Client
GETGLOB 16
CALL $Sdk_no_obj_getBalance$
PUSHINT 1601640666
PUSHSLICE x4461746120736d6172742d636f6e747261637420636f6d706c6574652e2e2e
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
DROP2
; end function setClientData
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setClientData_internal
.type	setClientData_internal, @function
;; param: pairKeysR
;; param: walletKeysR
; function setClientData
; expValue
; end expValue
;; push identifier pairKeysR
PUSH S1
; colValue
SETGLOB 20
; end colValue
; expValue
; end expValue
;; push identifier walletKeysR
DUP
; colValue
SETGLOB 22
; end colValue
PUSHINT 281329239
;; push identifier m_Client
GETGLOB 16
CALL $Sdk_no_obj_getBalance$
PUSHINT 1601640666
PUSHSLICE x4461746120736d6172742d636f6e747261637420636f6d706c6574652e2e2e
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
DROP2
; end function setClientData

.globl	getPairsData
.public	getPairsData
.type	getPairsData, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode pairAddress
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: pairAddress
; function getPairsData
NULL
;; decl: pubkey
;; Remote call IDEXclient.getPair
;; push identifier m_Client
GETGLOB 16
NEWC
STSLICECONST x497_
PUSHINT 2047603019
STUR 32
PUSHINT 1184379414
STUR 32
PUSHINT 2
STUR 8
STONE
STONE
STONE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 4
STZEROES
STSLICECONST 0
PUSHINT 2
STZEROES
;; push identifier pubkey
PUSH S1
ISNULL
PUSHCONT {
	STSLICECONST 0
}
PUSHCONT {
	THROW 64
	STSLICECONST 1
	;; push identifier pubkey
	PUSH S1
	STUR 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x6625dfd6
;; value0
;; push identifier pairAddress
PUSH S2
STSLICER
ENDC
PUSHINT 1
SENDRAWMSG
DROP2
; end function getPairsData
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getPairsData_internal
.type	getPairsData_internal, @function
;; param: pairAddress
; function getPairsData
NULL
;; decl: pubkey
;; Remote call IDEXclient.getPair
;; push identifier m_Client
GETGLOB 16
NEWC
STSLICECONST x497_
PUSHINT 2047603019
STUR 32
PUSHINT 1184379414
STUR 32
PUSHINT 2
STUR 8
STONE
STONE
STONE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 4
STZEROES
STSLICECONST 0
PUSHINT 2
STZEROES
;; push identifier pubkey
PUSH S1
ISNULL
PUSHCONT {
	STSLICECONST 0
}
PUSHCONT {
	THROW 64
	STSLICECONST 1
	;; push identifier pubkey
	PUSH S1
	STUR 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x6625dfd6
;; value0
;; push identifier pairAddress
PUSH S2
STSLICER
ENDC
PUSHINT 1
SENDRAWMSG
DROP2
; end function getPairsData

.globl	setClientPairData
.public	setClientPairData
.type	setClientPairData, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode pairRootA
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode pairReserveA
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode clientDepositA
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode clientAllowanceA
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode pairRootB
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode pairReserveB
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode clientDepositB
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode clientAllowanceB
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode curPair
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: pairRootA
;; param: pairReserveA
;; param: clientDepositA
;; param: clientAllowanceA
;; param: pairRootB
;; param: pairReserveB
;; param: clientDepositB
;; param: clientAllowanceB
;; param: curPair
; function setClientPairData
;; index
;; push identifier curPair
DUP
;; push identifier pairs
GETGLOB 18
PUSHINT 267
DICTGETREF
PUSHCONT {
	CTOS
	LDREF
	LDREF
	LDREF
	LDREF
	LDMSGADDR
	LDMSGADDR
	BLKSWAP 1, 6
	CTOS
	LDU 128
	LDMSGADDR
	BLKSWAP 1, 8
	CTOS
	LDMSGADDR
	PLDU 128
	TUPLE 10
}
PUSHCONT {
	NEWC
	ENDC
	NEWC
	ENDC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	TUPLE 10
}
IFELSE
;; decl: cp
; expValue
DUP
; end expValue
;; push identifier pairRootA
PUSH S10
; colValue
SETINDEX 2
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier pairReserveA
PUSH S9
; colValue
SETINDEX 3
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier clientDepositA
PUSH S8
; colValue
SETINDEX 4
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier clientAllowanceA
PUSH S7
; colValue
SETINDEX 5
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier pairRootB
PUSH S6
; colValue
SETINDEX 6
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier pairReserveB
PUSH S5
; colValue
SETINDEX 7
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier clientDepositB
PUSH S4
; colValue
SETINDEX 8
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier clientAllowanceB
PUSH S3
; colValue
SETINDEX 9
NIP
; end colValue
; expValue
;; fetch pairs
GETGLOB 18
;; push identifier curPair
PUSH S2
SWAP
; end expValue
;; push identifier cp
PUSH S2
; colValue
UNTUPLE 10
NEWC
NEWC
PUSH S6
STUR 128
PUSH S5
STSLICER
PUSH S4
STSLICER
STBREFR
NEWC
PUSH S3
STSLICER
PUSH S2
STUR 128
STBREFR
PUSH S10
STREFR
PUSH S9
STREFR
PUSH S8
STSLICER
PUSH S7
STSLICER
PUSH S6
STSLICER
XCHG s10
BLKDROP 10
ENDC
ROTREV
PUSHINT 267
DICTSETREF
SETGLOB 18
; end colValue
BLKDROP 10
; end function setClientPairData
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setClientPairData_internal
.type	setClientPairData_internal, @function
;; param: pairRootA
;; param: pairReserveA
;; param: clientDepositA
;; param: clientAllowanceA
;; param: pairRootB
;; param: pairReserveB
;; param: clientDepositB
;; param: clientAllowanceB
;; param: curPair
; function setClientPairData
;; index
;; push identifier curPair
DUP
;; push identifier pairs
GETGLOB 18
PUSHINT 267
DICTGETREF
PUSHCONT {
	CTOS
	LDREF
	LDREF
	LDREF
	LDREF
	LDMSGADDR
	LDMSGADDR
	BLKSWAP 1, 6
	CTOS
	LDU 128
	LDMSGADDR
	BLKSWAP 1, 8
	CTOS
	LDMSGADDR
	PLDU 128
	TUPLE 10
}
PUSHCONT {
	NEWC
	ENDC
	NEWC
	ENDC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	TUPLE 10
}
IFELSE
;; decl: cp
; expValue
DUP
; end expValue
;; push identifier pairRootA
PUSH S10
; colValue
SETINDEX 2
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier pairReserveA
PUSH S9
; colValue
SETINDEX 3
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier clientDepositA
PUSH S8
; colValue
SETINDEX 4
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier clientAllowanceA
PUSH S7
; colValue
SETINDEX 5
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier pairRootB
PUSH S6
; colValue
SETINDEX 6
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier pairReserveB
PUSH S5
; colValue
SETINDEX 7
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier clientDepositB
PUSH S4
; colValue
SETINDEX 8
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier clientAllowanceB
PUSH S3
; colValue
SETINDEX 9
NIP
; end colValue
; expValue
;; fetch pairs
GETGLOB 18
;; push identifier curPair
PUSH S2
SWAP
; end expValue
;; push identifier cp
PUSH S2
; colValue
UNTUPLE 10
NEWC
NEWC
PUSH S6
STUR 128
PUSH S5
STSLICER
PUSH S4
STSLICER
STBREFR
NEWC
PUSH S3
STSLICER
PUSH S2
STUR 128
STBREFR
PUSH S10
STREFR
PUSH S9
STREFR
PUSH S8
STSLICER
PUSH S7
STSLICER
PUSH S6
STSLICER
XCHG s10
BLKDROP 10
ENDC
ROTREV
PUSHINT 267
DICTSETREF
SETGLOB 18
; end colValue
BLKDROP 10
; end function setClientPairData

.globl	getWalletsData
.public	getWalletsData
.type	getWalletsData, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; function getWalletsData
; for
PUSHINT 0
;; decl: i
PUSHCONT {
	;; push identifier i
	DUP
	;; <
	;; get member length
	;; push identifier clientWalletKeys
	GETGLOB 22
	INDEX 0
	LESS
}
PUSHCONT {
	;; index
	;; push identifier i
	DUP
	;; push identifier clientWalletKeys
	GETGLOB 22
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	;; decl: curClientWallet
	;; push identifier curClientWallet
	DUP
	CALL $askNameTokenWallet_internal$
	;; push identifier curClientWallet
	DUP
	CALL $askWalletBalance1_internal$
	;; push identifier curClientWallet
	DUP
	CALL $askRootAddressTokenWallet_internal$
	DROP
	;; ++
	; expValue
	; end expValue
	INC
	UFITS 8
	; colValue
	; end colValue
}
WHILE
DROP
; end for
; for
PUSHINT 0
;; decl: k
PUSHCONT {
	;; push identifier k
	DUP
	;; <
	;; get member length
	;; push identifier clientPairKeys
	GETGLOB 20
	INDEX 0
	LESS
}
PUSHCONT {
	;; index
	;; push identifier k
	DUP
	;; push identifier clientPairKeys
	GETGLOB 20
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	;; decl: curClientPair
	;; push identifier curClientPair
	DUP
	CALL $getPairsData_internal$
	;; push identifier curClientPair
	DUP
	CALL $getPairClientWalletsFunc_internal$
	DROP
	;; ++
	; expValue
	; end expValue
	INC
	UFITS 8
	; colValue
	; end colValue
}
WHILE
DROP
; end for
PUSHINT 842683031
PUSHSLICE x436c69656e74206461746120736d6172742d636f6e747261637420636f6d706c6574652e2e2e0a506c65617365207265667265736820616e642067657420796f757220636c69656e742064617461
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
; end function getWalletsData
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getWalletsData_internal
.type	getWalletsData_internal, @function
; function getWalletsData
; for
PUSHINT 0
;; decl: i
PUSHCONT {
	;; push identifier i
	DUP
	;; <
	;; get member length
	;; push identifier clientWalletKeys
	GETGLOB 22
	INDEX 0
	LESS
}
PUSHCONT {
	;; index
	;; push identifier i
	DUP
	;; push identifier clientWalletKeys
	GETGLOB 22
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	;; decl: curClientWallet
	;; push identifier curClientWallet
	DUP
	CALL $askNameTokenWallet_internal$
	;; push identifier curClientWallet
	DUP
	CALL $askWalletBalance1_internal$
	;; push identifier curClientWallet
	DUP
	CALL $askRootAddressTokenWallet_internal$
	DROP
	;; ++
	; expValue
	; end expValue
	INC
	UFITS 8
	; colValue
	; end colValue
}
WHILE
DROP
; end for
; for
PUSHINT 0
;; decl: k
PUSHCONT {
	;; push identifier k
	DUP
	;; <
	;; get member length
	;; push identifier clientPairKeys
	GETGLOB 20
	INDEX 0
	LESS
}
PUSHCONT {
	;; index
	;; push identifier k
	DUP
	;; push identifier clientPairKeys
	GETGLOB 20
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	;; decl: curClientPair
	;; push identifier curClientPair
	DUP
	CALL $getPairsData_internal$
	;; push identifier curClientPair
	DUP
	CALL $getPairClientWalletsFunc_internal$
	DROP
	;; ++
	; expValue
	; end expValue
	INC
	UFITS 8
	; colValue
	; end colValue
}
WHILE
DROP
; end for
PUSHINT 842683031
PUSHSLICE x436c69656e74206461746120736d6172742d636f6e747261637420636f6d706c6574652e2e2e0a506c65617365207265667265736820616e642067657420796f757220636c69656e742064617461
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
; end function getWalletsData

.globl	getPairClientWalletsFunc
.public	getPairClientWalletsFunc
.type	getPairClientWalletsFunc, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode cuePair
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: cuePair
; modifier alwaysAccept
ACCEPT
; function getPairClientWalletsFunc
;; push identifier cuePair
DUP
;; decl: curPairRes
NULL
;; decl: pubkey
;; Remote call IDEXclient.getPairClientWallets
;; push identifier m_Client
GETGLOB 16
NEWC
STSLICECONST x497_
PUSHINT 264375519
STUR 32
PUSHINT 1184379414
STUR 32
PUSHINT 2
STUR 8
STONE
STONE
STONE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 4
STZEROES
STSLICECONST 0
PUSHINT 2
STZEROES
;; push identifier pubkey
PUSH S1
ISNULL
PUSHCONT {
	STSLICECONST 0
}
PUSHCONT {
	THROW 64
	STSLICECONST 1
	;; push identifier pubkey
	PUSH S1
	STUR 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x042ac9fb
;; pairAddr
;; push identifier curPairRes
PUSH S2
STSLICER
ENDC
PUSHINT 1
SENDRAWMSG
DROP2
; end function getPairClientWalletsFunc
DROP
; end modifier alwaysAccept
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getPairClientWalletsFunc_internal
.type	getPairClientWalletsFunc_internal, @function
;; param: cuePair
; modifier alwaysAccept
ACCEPT
; function getPairClientWalletsFunc
;; push identifier cuePair
DUP
;; decl: curPairRes
NULL
;; decl: pubkey
;; Remote call IDEXclient.getPairClientWallets
;; push identifier m_Client
GETGLOB 16
NEWC
STSLICECONST x497_
PUSHINT 264375519
STUR 32
PUSHINT 1184379414
STUR 32
PUSHINT 2
STUR 8
STONE
STONE
STONE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 4
STZEROES
STSLICECONST 0
PUSHINT 2
STZEROES
;; push identifier pubkey
PUSH S1
ISNULL
PUSHCONT {
	STSLICECONST 0
}
PUSHCONT {
	THROW 64
	STSLICECONST 1
	;; push identifier pubkey
	PUSH S1
	STUR 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x042ac9fb
;; pairAddr
;; push identifier curPairRes
PUSH S2
STSLICER
ENDC
PUSHINT 1
SENDRAWMSG
DROP2
; end function getPairClientWalletsFunc
DROP
; end modifier alwaysAccept

.globl	setWalletsNameS
.public	setWalletsNameS
.type	setWalletsNameS, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode clientWalletA
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode clientWalletB
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode pairReturn
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: clientWalletA
;; param: clientWalletB
;; param: pairReturn
; function setWalletsNameS
;; push identifier clientWalletA
PUSH S2
;; decl: adrAX
;; push identifier clientWalletB
PUSH S2
;; decl: adrBX
;; index
;; push identifier pairReturn
PUSH S2
;; push identifier PairWallets
GETGLOB 17
PUSHINT 267
DICTGET
PUSHCONT {
	LDMSGADDR
	TUPLE 2
}
PUSHCONT {
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	TUPLE 2
}
IFELSE
;; decl: pw
; expValue
DUP
; end expValue
;; push identifier adrAX
PUSH S3
; colValue
SETINDEX 0
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier adrBX
PUSH S2
; colValue
SETINDEX 1
NIP
; end colValue
; expValue
;; fetch PairWallets
GETGLOB 17
;; push identifier pairReturn
PUSH S4
SWAP
; end expValue
;; push identifier pw
PUSH S2
; colValue
UNTUPLE 2
NEWC
PUSH S2
STSLICER
PUSH S1
STSLICER
NIP
NIP
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 17
; end colValue
;; index
;; push identifier pairReturn
PUSH S3
;; push identifier pairs
GETGLOB 18
PUSHINT 267
DICTGETREF
PUSHCONT {
	CTOS
	LDREF
	LDREF
	LDREF
	LDREF
	LDMSGADDR
	LDMSGADDR
	BLKSWAP 1, 6
	CTOS
	LDU 128
	LDMSGADDR
	BLKSWAP 1, 8
	CTOS
	LDMSGADDR
	PLDU 128
	TUPLE 10
}
PUSHCONT {
	NEWC
	ENDC
	NEWC
	ENDC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	TUPLE 10
}
IFELSE
;; decl: cx
;; index
;; push identifier adrAX
PUSH S3
;; push identifier wallets
GETGLOB 21
PUSHINT 267
DICTGET
PUSHCONT {
	LDREF
	LDMSGADDR
	PLDU 128
	TUPLE 3
}
PUSHCONT {
	NEWC
	ENDC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	TUPLE 3
}
IFELSE
;; decl: cp
;; index
;; push identifier adrBX
PUSH S3
;; push identifier wallets
GETGLOB 21
PUSHINT 267
DICTGET
PUSHCONT {
	LDREF
	LDMSGADDR
	PLDU 128
	TUPLE 3
}
PUSHCONT {
	NEWC
	ENDC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	TUPLE 3
}
IFELSE
;; decl: cp1
;; get member name
;; push identifier cp
PUSH S1
INDEX 0
;; decl: nameP
;; get member name
;; push identifier cp1
PUSH S1
INDEX 0
;; decl: nameR
; expValue
PUSH S4
; end expValue
;; push identifier nameP
PUSH S2
; colValue
SETINDEX 0
POP S5
; end colValue
; expValue
PUSH S4
; end expValue
;; push identifier nameR
PUSH S1
; colValue
SETINDEX 1
POP S5
; end colValue
; expValue
;; fetch pairs
GETGLOB 18
;; push identifier pairReturn
PUSH S9
SWAP
; end expValue
;; push identifier cx
PUSH S6
; colValue
UNTUPLE 10
NEWC
NEWC
PUSH S6
STUR 128
PUSH S5
STSLICER
PUSH S4
STSLICER
STBREFR
NEWC
PUSH S3
STSLICER
PUSH S2
STUR 128
STBREFR
PUSH S10
STREFR
PUSH S9
STREFR
PUSH S8
STSLICER
PUSH S7
STSLICER
PUSH S6
STSLICER
XCHG s10
BLKDROP 10
ENDC
ROTREV
PUSHINT 267
DICTSETREF
SETGLOB 18
; end colValue
BLKDROP 11
; end function setWalletsNameS
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setWalletsNameS_internal
.type	setWalletsNameS_internal, @function
;; param: clientWalletA
;; param: clientWalletB
;; param: pairReturn
; function setWalletsNameS
;; push identifier clientWalletA
PUSH S2
;; decl: adrAX
;; push identifier clientWalletB
PUSH S2
;; decl: adrBX
;; index
;; push identifier pairReturn
PUSH S2
;; push identifier PairWallets
GETGLOB 17
PUSHINT 267
DICTGET
PUSHCONT {
	LDMSGADDR
	TUPLE 2
}
PUSHCONT {
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	TUPLE 2
}
IFELSE
;; decl: pw
; expValue
DUP
; end expValue
;; push identifier adrAX
PUSH S3
; colValue
SETINDEX 0
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier adrBX
PUSH S2
; colValue
SETINDEX 1
NIP
; end colValue
; expValue
;; fetch PairWallets
GETGLOB 17
;; push identifier pairReturn
PUSH S4
SWAP
; end expValue
;; push identifier pw
PUSH S2
; colValue
UNTUPLE 2
NEWC
PUSH S2
STSLICER
PUSH S1
STSLICER
NIP
NIP
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 17
; end colValue
;; index
;; push identifier pairReturn
PUSH S3
;; push identifier pairs
GETGLOB 18
PUSHINT 267
DICTGETREF
PUSHCONT {
	CTOS
	LDREF
	LDREF
	LDREF
	LDREF
	LDMSGADDR
	LDMSGADDR
	BLKSWAP 1, 6
	CTOS
	LDU 128
	LDMSGADDR
	BLKSWAP 1, 8
	CTOS
	LDMSGADDR
	PLDU 128
	TUPLE 10
}
PUSHCONT {
	NEWC
	ENDC
	NEWC
	ENDC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	TUPLE 10
}
IFELSE
;; decl: cx
;; index
;; push identifier adrAX
PUSH S3
;; push identifier wallets
GETGLOB 21
PUSHINT 267
DICTGET
PUSHCONT {
	LDREF
	LDMSGADDR
	PLDU 128
	TUPLE 3
}
PUSHCONT {
	NEWC
	ENDC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	TUPLE 3
}
IFELSE
;; decl: cp
;; index
;; push identifier adrBX
PUSH S3
;; push identifier wallets
GETGLOB 21
PUSHINT 267
DICTGET
PUSHCONT {
	LDREF
	LDMSGADDR
	PLDU 128
	TUPLE 3
}
PUSHCONT {
	NEWC
	ENDC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	TUPLE 3
}
IFELSE
;; decl: cp1
;; get member name
;; push identifier cp
PUSH S1
INDEX 0
;; decl: nameP
;; get member name
;; push identifier cp1
PUSH S1
INDEX 0
;; decl: nameR
; expValue
PUSH S4
; end expValue
;; push identifier nameP
PUSH S2
; colValue
SETINDEX 0
POP S5
; end colValue
; expValue
PUSH S4
; end expValue
;; push identifier nameR
PUSH S1
; colValue
SETINDEX 1
POP S5
; end colValue
; expValue
;; fetch pairs
GETGLOB 18
;; push identifier pairReturn
PUSH S9
SWAP
; end expValue
;; push identifier cx
PUSH S6
; colValue
UNTUPLE 10
NEWC
NEWC
PUSH S6
STUR 128
PUSH S5
STSLICER
PUSH S4
STSLICER
STBREFR
NEWC
PUSH S3
STSLICER
PUSH S2
STUR 128
STBREFR
PUSH S10
STREFR
PUSH S9
STREFR
PUSH S8
STSLICER
PUSH S7
STSLICER
PUSH S6
STSLICER
XCHG s10
BLKDROP 10
ENDC
ROTREV
PUSHINT 267
DICTSETREF
SETGLOB 18
; end colValue
BLKDROP 11
; end function setWalletsNameS

.globl	askRootAddressTokenWallet
.public	askRootAddressTokenWallet
.type	askRootAddressTokenWallet, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode waletAddress
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: waletAddress
; modifier alwaysAccept
ACCEPT
; function askRootAddressTokenWallet
NULL
;; decl: pubkey
;; Remote call ITONTokenWallet.getRootAddress
;; push identifier waletAddress
PUSH S1
NEWC
STSLICECONST x497_
PUSHINT 63344311
STUR 32
PUSHINT 1184379414
STUR 32
PUSHINT 2
STUR 8
STONE
STONE
STONE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 4
STZEROES
STSLICECONST 0
PUSHINT 2
STZEROES
;; push identifier pubkey
PUSH S1
ISNULL
PUSHCONT {
	STSLICECONST 0
}
PUSHCONT {
	THROW 64
	STSLICECONST 1
	;; push identifier pubkey
	PUSH S1
	STUR 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x00000016
ENDC
PUSHINT 1
SENDRAWMSG
DROP
; end function askRootAddressTokenWallet
DROP
; end modifier alwaysAccept
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	askRootAddressTokenWallet_internal
.type	askRootAddressTokenWallet_internal, @function
;; param: waletAddress
; modifier alwaysAccept
ACCEPT
; function askRootAddressTokenWallet
NULL
;; decl: pubkey
;; Remote call ITONTokenWallet.getRootAddress
;; push identifier waletAddress
PUSH S1
NEWC
STSLICECONST x497_
PUSHINT 63344311
STUR 32
PUSHINT 1184379414
STUR 32
PUSHINT 2
STUR 8
STONE
STONE
STONE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 4
STZEROES
STSLICECONST 0
PUSHINT 2
STZEROES
;; push identifier pubkey
PUSH S1
ISNULL
PUSHCONT {
	STSLICECONST 0
}
PUSHCONT {
	THROW 64
	STSLICECONST 1
	;; push identifier pubkey
	PUSH S1
	STUR 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x00000016
ENDC
PUSHINT 1
SENDRAWMSG
DROP
; end function askRootAddressTokenWallet
DROP
; end modifier alwaysAccept

.globl	setRootAddress
.public	setRootAddress
.type	setRootAddress, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode value0
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: value0
; function setRootAddress
;; push identifier value0
DUP
;; decl: rootAddress
;; get member sender
GETGLOB 9
;; decl: clientWallet
;; index
;; push identifier clientWallet
DUP
;; push identifier wallets
GETGLOB 21
PUSHINT 267
DICTGET
PUSHCONT {
	LDREF
	LDMSGADDR
	PLDU 128
	TUPLE 3
}
PUSHCONT {
	NEWC
	ENDC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	TUPLE 3
}
IFELSE
;; decl: cp
; expValue
DUP
; end expValue
;; push identifier rootAddress
PUSH S3
; colValue
SETINDEX 1
NIP
; end colValue
; expValue
;; fetch wallets
GETGLOB 21
;; push identifier clientWallet
PUSH S2
SWAP
; end expValue
;; push identifier cp
PUSH S2
; colValue
UNTUPLE 3
NEWC
PUSH S3
STREFR
PUSH S2
STSLICER
PUSH S1
STUR 128
XCHG s3
BLKDROP 3
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 21
; end colValue
BLKDROP 4
; end function setRootAddress
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setRootAddress_internal
.type	setRootAddress_internal, @function
;; param: value0
; function setRootAddress
;; push identifier value0
DUP
;; decl: rootAddress
;; get member sender
GETGLOB 9
;; decl: clientWallet
;; index
;; push identifier clientWallet
DUP
;; push identifier wallets
GETGLOB 21
PUSHINT 267
DICTGET
PUSHCONT {
	LDREF
	LDMSGADDR
	PLDU 128
	TUPLE 3
}
PUSHCONT {
	NEWC
	ENDC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	TUPLE 3
}
IFELSE
;; decl: cp
; expValue
DUP
; end expValue
;; push identifier rootAddress
PUSH S3
; colValue
SETINDEX 1
NIP
; end colValue
; expValue
;; fetch wallets
GETGLOB 21
;; push identifier clientWallet
PUSH S2
SWAP
; end expValue
;; push identifier cp
PUSH S2
; colValue
UNTUPLE 3
NEWC
PUSH S3
STREFR
PUSH S2
STSLICER
PUSH S1
STUR 128
XCHG s3
BLKDROP 3
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 21
; end colValue
BLKDROP 4
; end function setRootAddress

.globl	askNameTokenWallet
.public	askNameTokenWallet
.type	askNameTokenWallet, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode waletAddress
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: waletAddress
; modifier alwaysAccept
ACCEPT
; function askNameTokenWallet
NULL
;; decl: pubkey
;; Remote call ITONTokenWallet.getName
;; push identifier waletAddress
PUSH S1
NEWC
STSLICECONST x497_
PUSHINT 509242164
STUR 32
PUSHINT 1184379414
STUR 32
PUSHINT 2
STUR 8
STONE
STONE
STONE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 4
STZEROES
STSLICECONST 0
PUSHINT 2
STZEROES
;; push identifier pubkey
PUSH S1
ISNULL
PUSHCONT {
	STSLICECONST 0
}
PUSHCONT {
	THROW 64
	STSLICECONST 1
	;; push identifier pubkey
	PUSH S1
	STUR 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x00000011
ENDC
PUSHINT 1
SENDRAWMSG
DROP
; end function askNameTokenWallet
DROP
; end modifier alwaysAccept
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	askNameTokenWallet_internal
.type	askNameTokenWallet_internal, @function
;; param: waletAddress
; modifier alwaysAccept
ACCEPT
; function askNameTokenWallet
NULL
;; decl: pubkey
;; Remote call ITONTokenWallet.getName
;; push identifier waletAddress
PUSH S1
NEWC
STSLICECONST x497_
PUSHINT 509242164
STUR 32
PUSHINT 1184379414
STUR 32
PUSHINT 2
STUR 8
STONE
STONE
STONE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 4
STZEROES
STSLICECONST 0
PUSHINT 2
STZEROES
;; push identifier pubkey
PUSH S1
ISNULL
PUSHCONT {
	STSLICECONST 0
}
PUSHCONT {
	THROW 64
	STSLICECONST 1
	;; push identifier pubkey
	PUSH S1
	STUR 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x00000011
ENDC
PUSHINT 1
SENDRAWMSG
DROP
; end function askNameTokenWallet
DROP
; end modifier alwaysAccept

.globl	setTokenName
.public	setTokenName
.type	setTokenName, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode value0
LDREF
ENDS
;; param: value0
; function setTokenName
;; push identifier value0
DUP
;; decl: tokenName
;; get member sender
GETGLOB 9
;; decl: clientWallet
;; index
;; push identifier clientWallet
DUP
;; push identifier wallets
GETGLOB 21
PUSHINT 267
DICTGET
PUSHCONT {
	LDREF
	LDMSGADDR
	PLDU 128
	TUPLE 3
}
PUSHCONT {
	NEWC
	ENDC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	TUPLE 3
}
IFELSE
;; decl: cp
; expValue
DUP
; end expValue
;; push identifier tokenName
PUSH S3
; colValue
SETINDEX 0
NIP
; end colValue
; expValue
;; fetch wallets
GETGLOB 21
;; push identifier clientWallet
PUSH S2
SWAP
; end expValue
;; push identifier cp
PUSH S2
; colValue
UNTUPLE 3
NEWC
PUSH S3
STREFR
PUSH S2
STSLICER
PUSH S1
STUR 128
XCHG s3
BLKDROP 3
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 21
; end colValue
BLKDROP 4
; end function setTokenName
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setTokenName_internal
.type	setTokenName_internal, @function
;; param: value0
; function setTokenName
;; push identifier value0
DUP
;; decl: tokenName
;; get member sender
GETGLOB 9
;; decl: clientWallet
;; index
;; push identifier clientWallet
DUP
;; push identifier wallets
GETGLOB 21
PUSHINT 267
DICTGET
PUSHCONT {
	LDREF
	LDMSGADDR
	PLDU 128
	TUPLE 3
}
PUSHCONT {
	NEWC
	ENDC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	TUPLE 3
}
IFELSE
;; decl: cp
; expValue
DUP
; end expValue
;; push identifier tokenName
PUSH S3
; colValue
SETINDEX 0
NIP
; end colValue
; expValue
;; fetch wallets
GETGLOB 21
;; push identifier clientWallet
PUSH S2
SWAP
; end expValue
;; push identifier cp
PUSH S2
; colValue
UNTUPLE 3
NEWC
PUSH S3
STREFR
PUSH S2
STSLICER
PUSH S1
STUR 128
XCHG s3
BLKDROP 3
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 21
; end colValue
BLKDROP 4
; end function setTokenName

.globl	askWalletBalance1
.public	askWalletBalance1
.type	askWalletBalance1, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode waletAddress
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: waletAddress
; modifier alwaysAccept
ACCEPT
; function askWalletBalance1
NULL
;; decl: pubkey
;; Remote call ITONTokenWallet.getBalance
;; push identifier waletAddress
PUSH S1
NEWC
STSLICECONST x497_
PUSHINT 1018336942
STUR 32
PUSHINT 1184379414
STUR 32
PUSHINT 2
STUR 8
STONE
STONE
STONE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 4
STZEROES
STSLICECONST 0
PUSHINT 2
STZEROES
;; push identifier pubkey
PUSH S1
ISNULL
PUSHCONT {
	STSLICECONST 0
}
PUSHCONT {
	THROW 64
	STSLICECONST 1
	;; push identifier pubkey
	PUSH S1
	STUR 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x00000014
ENDC
PUSHINT 1
SENDRAWMSG
DROP
; end function askWalletBalance1
DROP
; end modifier alwaysAccept
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	askWalletBalance1_internal
.type	askWalletBalance1_internal, @function
;; param: waletAddress
; modifier alwaysAccept
ACCEPT
; function askWalletBalance1
NULL
;; decl: pubkey
;; Remote call ITONTokenWallet.getBalance
;; push identifier waletAddress
PUSH S1
NEWC
STSLICECONST x497_
PUSHINT 1018336942
STUR 32
PUSHINT 1184379414
STUR 32
PUSHINT 2
STUR 8
STONE
STONE
STONE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 4
STZEROES
STSLICECONST 0
PUSHINT 2
STZEROES
;; push identifier pubkey
PUSH S1
ISNULL
PUSHCONT {
	STSLICECONST 0
}
PUSHCONT {
	THROW 64
	STSLICECONST 1
	;; push identifier pubkey
	PUSH S1
	STUR 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x00000014
ENDC
PUSHINT 1
SENDRAWMSG
DROP
; end function askWalletBalance1
DROP
; end modifier alwaysAccept

.globl	setTokenBalanceInMenuCB
.public	setTokenBalanceInMenuCB
.type	setTokenBalanceInMenuCB, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode value0
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
ENDS
;; param: value0
; function setTokenBalanceInMenuCB
;; get member sender
GETGLOB 9
;; decl: answerAddress
; expValue
; end expValue
;; push identifier value0
PUSH S1
; colValue
SETGLOB 23
; end colValue
;; index
;; push identifier answerAddress
DUP
;; push identifier wallets
GETGLOB 21
PUSHINT 267
DICTGET
PUSHCONT {
	LDREF
	LDMSGADDR
	PLDU 128
	TUPLE 3
}
PUSHCONT {
	NEWC
	ENDC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	TUPLE 3
}
IFELSE
;; decl: cp
; expValue
DUP
; end expValue
;; push identifier value0
PUSH S3
; colValue
SETINDEX 2
NIP
; end colValue
; expValue
;; fetch wallets
GETGLOB 21
;; push identifier answerAddress
PUSH S2
SWAP
; end expValue
;; push identifier cp
PUSH S2
; colValue
UNTUPLE 3
NEWC
PUSH S3
STREFR
PUSH S2
STSLICER
PUSH S1
STUR 128
XCHG s3
BLKDROP 3
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 21
; end colValue
BLKDROP 3
; end function setTokenBalanceInMenuCB
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setTokenBalanceInMenuCB_internal
.type	setTokenBalanceInMenuCB_internal, @function
;; param: value0
; function setTokenBalanceInMenuCB
;; get member sender
GETGLOB 9
;; decl: answerAddress
; expValue
; end expValue
;; push identifier value0
PUSH S1
; colValue
SETGLOB 23
; end colValue
;; index
;; push identifier answerAddress
DUP
;; push identifier wallets
GETGLOB 21
PUSHINT 267
DICTGET
PUSHCONT {
	LDREF
	LDMSGADDR
	PLDU 128
	TUPLE 3
}
PUSHCONT {
	NEWC
	ENDC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	TUPLE 3
}
IFELSE
;; decl: cp
; expValue
DUP
; end expValue
;; push identifier value0
PUSH S3
; colValue
SETINDEX 2
NIP
; end colValue
; expValue
;; fetch wallets
GETGLOB 21
;; push identifier answerAddress
PUSH S2
SWAP
; end expValue
;; push identifier cp
PUSH S2
; colValue
UNTUPLE 3
NEWC
PUSH S3
STREFR
PUSH S2
STSLICER
PUSH S1
STUR 128
XCHG s3
BLKDROP 3
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 21
; end colValue
BLKDROP 3
; end function setTokenBalanceInMenuCB

.globl	setDataForView
.public	setDataForView
.type	setDataForView, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode index
LDU 32
ENDS
;; param: index
; function setDataForView
; for
PUSHINT 0
;; decl: i
PUSHCONT {
	;; push identifier i
	DUP
	;; <
	;; get member length
	;; push identifier clientWalletKeys
	GETGLOB 22
	INDEX 0
	LESS
}
PUSHCONT {
	;; index
	;; push identifier i
	DUP
	;; push identifier clientWalletKeys
	GETGLOB 22
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	;; decl: cur
	;; index
	;; push identifier cur
	DUP
	;; push identifier wallets
	GETGLOB 21
	PUSHINT 267
	DICTGET
	PUSHCONT {
		LDREF
		LDMSGADDR
		PLDU 128
		TUPLE 3
	}
	PUSHCONT {
		NEWC
		ENDC
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		PUSHINT 0
		TUPLE 3
	}
	IFELSE
	;; decl: cp
	;; get member balanceToken
	;; push identifier cp
	DUP
	INDEX 2
	;; decl: bal
	;; get member name
	;; push identifier cp
	PUSH S1
	INDEX 0
	;; decl: nam
	PUSHINT 0
	NEWC
	NULL
	TUPLE 2
	NEWC
	PUSHSLICE x57616c6c657420616464726573733a20
	CALL $storeStringInBuilders$
	CALL $appendToList$
	;; push identifier cur
	PUSH S6
	CALL $convertAddressToHexString$
	PUSHSLICE x0a546f6b656e206e616d653a20
	CALL $storeStringInBuilders$
	CALL $appendToList$
	;; push identifier nam
	PUSH S3
	CTOS
	CALL $storeStringInBuilders$
	CALL $appendToList$
	PUSHSLICE x0a42616c616e63653a20
	CALL $storeStringInBuilders$
	CALL $appendToList$
	;; push identifier bal
	PUSH S4
	PUSHINT 0
	FALSE
	FALSE
	CALL $convertIntToDecStr$
	CALL $appendToList$
	PUSHSLICE x206e616e6f746f6b656e730a2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
	CALL $storeStringInBuilders$
	CALL $appendToList$
	CALL $assembleList$
	CALL $Terminal_no_obj_print$
	BLKDROP 4
	;; ++
	; expValue
	; end expValue
	INC
	UFITS 8
	; colValue
	; end colValue
}
WHILE
DROP
; end for
;; push identifier m_clientBalanceTon
GETGLOB 15
CALL $tokens_internal$
SWAP
SWAP
;; decl: dec
;; decl: float
PUSHINT 842683031
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x596f757220636c69656e7420616464726573732069733a20
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier m_Client
GETGLOB 16
CALL $convertAddressToHexString$
PUSHSLICE x0a436c69656e742062616c616e636520
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier dec
PUSH S4
PUSHINT 0
FALSE
FALSE
CALL $convertIntToDecStr$
CALL $appendToList$
PUSHSLICE x2e
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier float
PUSH S3
PUSHINT 0
FALSE
FALSE
CALL $convertIntToDecStr$
CALL $appendToList$
PUSHSLICE x20544f4e53
CALL $storeStringInBuilders$
CALL $appendToList$
CALL $assembleList$
CALL $Terminal_no_obj_print$
BLKDROP 3
; end function setDataForView
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setDataForView_internal
.type	setDataForView_internal, @function
;; param: index
; function setDataForView
; for
PUSHINT 0
;; decl: i
PUSHCONT {
	;; push identifier i
	DUP
	;; <
	;; get member length
	;; push identifier clientWalletKeys
	GETGLOB 22
	INDEX 0
	LESS
}
PUSHCONT {
	;; index
	;; push identifier i
	DUP
	;; push identifier clientWalletKeys
	GETGLOB 22
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	;; decl: cur
	;; index
	;; push identifier cur
	DUP
	;; push identifier wallets
	GETGLOB 21
	PUSHINT 267
	DICTGET
	PUSHCONT {
		LDREF
		LDMSGADDR
		PLDU 128
		TUPLE 3
	}
	PUSHCONT {
		NEWC
		ENDC
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		PUSHINT 0
		TUPLE 3
	}
	IFELSE
	;; decl: cp
	;; get member balanceToken
	;; push identifier cp
	DUP
	INDEX 2
	;; decl: bal
	;; get member name
	;; push identifier cp
	PUSH S1
	INDEX 0
	;; decl: nam
	PUSHINT 0
	NEWC
	NULL
	TUPLE 2
	NEWC
	PUSHSLICE x57616c6c657420616464726573733a20
	CALL $storeStringInBuilders$
	CALL $appendToList$
	;; push identifier cur
	PUSH S6
	CALL $convertAddressToHexString$
	PUSHSLICE x0a546f6b656e206e616d653a20
	CALL $storeStringInBuilders$
	CALL $appendToList$
	;; push identifier nam
	PUSH S3
	CTOS
	CALL $storeStringInBuilders$
	CALL $appendToList$
	PUSHSLICE x0a42616c616e63653a20
	CALL $storeStringInBuilders$
	CALL $appendToList$
	;; push identifier bal
	PUSH S4
	PUSHINT 0
	FALSE
	FALSE
	CALL $convertIntToDecStr$
	CALL $appendToList$
	PUSHSLICE x206e616e6f746f6b656e730a2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e
	CALL $storeStringInBuilders$
	CALL $appendToList$
	CALL $assembleList$
	CALL $Terminal_no_obj_print$
	BLKDROP 4
	;; ++
	; expValue
	; end expValue
	INC
	UFITS 8
	; colValue
	; end colValue
}
WHILE
DROP
; end for
;; push identifier m_clientBalanceTon
GETGLOB 15
CALL $tokens_internal$
SWAP
SWAP
;; decl: dec
;; decl: float
PUSHINT 842683031
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x596f757220636c69656e7420616464726573732069733a20
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier m_Client
GETGLOB 16
CALL $convertAddressToHexString$
PUSHSLICE x0a436c69656e742062616c616e636520
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier dec
PUSH S4
PUSHINT 0
FALSE
FALSE
CALL $convertIntToDecStr$
CALL $appendToList$
PUSHSLICE x2e
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier float
PUSH S3
PUSHINT 0
FALSE
FALSE
CALL $convertIntToDecStr$
CALL $appendToList$
PUSHSLICE x20544f4e53
CALL $storeStringInBuilders$
CALL $appendToList$
CALL $assembleList$
CALL $Terminal_no_obj_print$
BLKDROP 3
; end function setDataForView

.globl	mainmenu
.public	mainmenu
.type	mainmenu, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; function mainmenu
NEWC
ENDC
PUSHSLICE x4d61696e206d656e75
NEWC
STSLICE
ENDC
PUSHINT 7
NEWDICT
PUSHSLICE x4c6f6720696e746f206120646966666572656e7420636c69656e742077616c6c6574
NEWC
STSLICE
ENDC
NEWC
ENDC
PUSHINT 951733323
TUPLE 3
UNTUPLE 3
NEWC
PUSH S3
STREFR
PUSH S2
STREFR
PUSH S1
STUR 32
XCHG s3
BLKDROP 3
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x5265667265736820636c69656e742077616c6c65742064617461
NEWC
STSLICE
ENDC
NEWC
ENDC
PUSHINT 2096762201
TUPLE 3
UNTUPLE 3
NEWC
PUSH S3
STREFR
PUSH S2
STREFR
PUSH S1
STUR 32
XCHG s3
BLKDROP 3
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x446973706c617920636c69656e742077616c6c65742064617461
NEWC
STSLICE
ENDC
NEWC
ENDC
PUSHINT 496493220
TUPLE 3
UNTUPLE 3
NEWC
PUSH S3
STREFR
PUSH S2
STREFR
PUSH S1
STUR 32
XCHG s3
BLKDROP 3
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x416464204c6971756964697479
NEWC
STSLICE
ENDC
NEWC
ENDC
PUSHINT 2072330737
TUPLE 3
UNTUPLE 3
NEWC
PUSH S3
STREFR
PUSH S2
STREFR
PUSH S1
STUR 32
XCHG s3
BLKDROP 3
PUSHINT 3
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20616c6c204c6971756964697479
NEWC
STSLICE
ENDC
NEWC
ENDC
PUSHINT 1562215163
TUPLE 3
UNTUPLE 3
NEWC
PUSH S3
STREFR
PUSH S2
STREFR
PUSH S1
STUR 32
XCHG s3
BLKDROP 3
PUSHINT 4
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x436f6e6e65637420746f2061206e657720746f6b656e2070616972
NEWC
STSLICE
ENDC
NEWC
ENDC
PUSHINT 459002028
TUPLE 3
UNTUPLE 3
NEWC
PUSH S3
STREFR
PUSH S2
STREFR
PUSH S1
STUR 32
XCHG s3
BLKDROP 3
PUSHINT 5
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
NEWC
ENDC
PUSHINT 0
TUPLE 3
UNTUPLE 3
NEWC
PUSH S3
STREFR
PUSH S2
STREFR
PUSH S1
STUR 32
XCHG s3
BLKDROP 3
PUSHINT 6
ROT
PUSHINT 32
DICTUSETB
PAIR
CALL $Menu_no_obj_select$
; end function mainmenu
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	mainmenu_internal
.type	mainmenu_internal, @function
; function mainmenu
NEWC
ENDC
PUSHSLICE x4d61696e206d656e75
NEWC
STSLICE
ENDC
PUSHINT 7
NEWDICT
PUSHSLICE x4c6f6720696e746f206120646966666572656e7420636c69656e742077616c6c6574
NEWC
STSLICE
ENDC
NEWC
ENDC
PUSHINT 951733323
TUPLE 3
UNTUPLE 3
NEWC
PUSH S3
STREFR
PUSH S2
STREFR
PUSH S1
STUR 32
XCHG s3
BLKDROP 3
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x5265667265736820636c69656e742077616c6c65742064617461
NEWC
STSLICE
ENDC
NEWC
ENDC
PUSHINT 2096762201
TUPLE 3
UNTUPLE 3
NEWC
PUSH S3
STREFR
PUSH S2
STREFR
PUSH S1
STUR 32
XCHG s3
BLKDROP 3
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x446973706c617920636c69656e742077616c6c65742064617461
NEWC
STSLICE
ENDC
NEWC
ENDC
PUSHINT 496493220
TUPLE 3
UNTUPLE 3
NEWC
PUSH S3
STREFR
PUSH S2
STREFR
PUSH S1
STUR 32
XCHG s3
BLKDROP 3
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x416464204c6971756964697479
NEWC
STSLICE
ENDC
NEWC
ENDC
PUSHINT 2072330737
TUPLE 3
UNTUPLE 3
NEWC
PUSH S3
STREFR
PUSH S2
STREFR
PUSH S1
STUR 32
XCHG s3
BLKDROP 3
PUSHINT 3
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20616c6c204c6971756964697479
NEWC
STSLICE
ENDC
NEWC
ENDC
PUSHINT 1562215163
TUPLE 3
UNTUPLE 3
NEWC
PUSH S3
STREFR
PUSH S2
STREFR
PUSH S1
STUR 32
XCHG s3
BLKDROP 3
PUSHINT 4
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x436f6e6e65637420746f2061206e657720746f6b656e2070616972
NEWC
STSLICE
ENDC
NEWC
ENDC
PUSHINT 459002028
TUPLE 3
UNTUPLE 3
NEWC
PUSH S3
STREFR
PUSH S2
STREFR
PUSH S1
STUR 32
XCHG s3
BLKDROP 3
PUSHINT 5
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
NEWC
ENDC
PUSHINT 0
TUPLE 3
UNTUPLE 3
NEWC
PUSH S3
STREFR
PUSH S2
STREFR
PUSH S1
STUR 32
XCHG s3
BLKDROP 3
PUSHINT 6
ROT
PUSHINT 32
DICTUSETB
PAIR
CALL $Menu_no_obj_select$
; end function mainmenu

.globl	returnAllLiquidity_setpair
.public	returnAllLiquidity_setpair
.type	returnAllLiquidity_setpair, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode index
LDU 32
ENDS
;; param: index
; function returnAllLiquidity_setpair
;; if
;; get member length
;; push identifier clientPairKeys
GETGLOB 20
INDEX 0
EQINT 0
PUSHCONT {
	PUSHINT 842683031
	PUSHSLICE x596f752068617665206e6f20746f6b656e2070616972732c20706c6561736520636f6e6e65637420746f20736f6d652e2e2e
	NEWC
	STSLICE
	ENDC
	CALL $Terminal_no_obj_print$
}
PUSHCONT {
	PUSHINT 0
	NEWDICT
	PAIR
	;; decl: m_menu
	; for
	PUSHINT 0
	;; decl: i
	PUSHCONT {
		;; push identifier i
		DUP
		;; <
		;; get member length
		;; push identifier clientPairKeys
		GETGLOB 20
		INDEX 0
		LESS
	}
	PUSHCONT {
		;; index
		;; push identifier i
		DUP
		;; push identifier clientPairKeys
		GETGLOB 20
		INDEX 1
		PUSHINT 32
		DICTUGET
		THROWIFNOT 50
		;; decl: curAddr
		;; index
		;; push identifier curAddr
		DUP
		;; push identifier pairs
		GETGLOB 18
		PUSHINT 267
		DICTGETREF
		PUSHCONT {
			CTOS
			LDREF
			LDREF
			LDREF
			LDREF
			LDMSGADDR
			LDMSGADDR
			BLKSWAP 1, 6
			CTOS
			LDU 128
			LDMSGADDR
			BLKSWAP 1, 8
			CTOS
			LDMSGADDR
			PLDU 128
			TUPLE 10
		}
		PUSHCONT {
			NEWC
			ENDC
			NEWC
			ENDC
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			PUSHINT 0
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			PUSHINT 0
			TUPLE 10
		}
		IFELSE
		;; decl: ct
		;; get member name1
		;; push identifier ct
		DUP
		INDEX 0
		;; decl: n1
		;; get member name2
		;; push identifier ct
		PUSH S1
		INDEX 1
		;; decl: n2
		NEWC
		NULL
		TUPLE 2
		NEWC
		PUSHSLICE x5061697220746f6b656e73206e616d653a20
		CALL $storeStringInBuilders$
		CALL $appendToList$
		;; push identifier n1
		PUSH S3
		CTOS
		CALL $storeStringInBuilders$
		CALL $appendToList$
		PUSHSLICE x2d
		CALL $storeStringInBuilders$
		CALL $appendToList$
		;; push identifier n2
		PUSH S2
		CTOS
		CALL $storeStringInBuilders$
		CALL $appendToList$
		PUSHSLICE x0a5061697220616464726573733a20
		CALL $storeStringInBuilders$
		CALL $appendToList$
		;; push identifier curAddr
		PUSH S5
		CALL $convertAddressToHexString$
		PUSHSLICE x20
		CALL $storeStringInBuilders$
		CALL $appendToList$
		CALL $assembleList$
		;; decl: pairAddrAsStr
		; expValue
		PUSH S6
		; end expValue
		;; push identifier pairAddrAsStr
		PUSH S1
		NEWC
		ENDC
		PUSHINT 1534529821
		TUPLE 3
		;; array.push(..)
		UNTUPLE 3
		NEWC
		PUSH S3
		STREFR
		PUSH S2
		STREFR
		PUSH S1
		STUR 32
		XCHG s3
		BLKDROP 3
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S7
		; end colValue
		BLKDROP 5
		;; ++
		; expValue
		; end expValue
		INC
		; colValue
		; end colValue
	}
	WHILE
	DROP
	; end for
	; expValue
	DUP
	; end expValue
	PUSHSLICE x4261636b20746f206d656e75
	NEWC
	STSLICE
	ENDC
	NEWC
	ENDC
	PUSHINT 1770066373
	TUPLE 3
	;; array.push(..)
	UNTUPLE 3
	NEWC
	PUSH S3
	STREFR
	PUSH S2
	STREFR
	PUSH S1
	STUR 32
	XCHG s3
	BLKDROP 3
	SWAP
	UNPAIR
	PUSH S1
	INC
	XCHG s3
	ROTREV
	PUSHINT 32
	DICTUSETB
	PAIR
	; colValue
	NIP
	; end colValue
	PUSHSLICE x43686f6f7365207061697220616464726573733a
	NEWC
	STSLICE
	ENDC
	NEWC
	ENDC
	;; push identifier m_menu
	PUSH S2
	CALL $Menu_no_obj_select$
	DROP
}
IFELSE
;; end if
DROP
; end function returnAllLiquidity_setpair
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	returnAllLiquidity_setpair_internal
.type	returnAllLiquidity_setpair_internal, @function
;; param: index
; function returnAllLiquidity_setpair
;; if
;; get member length
;; push identifier clientPairKeys
GETGLOB 20
INDEX 0
EQINT 0
PUSHCONT {
	PUSHINT 842683031
	PUSHSLICE x596f752068617665206e6f20746f6b656e2070616972732c20706c6561736520636f6e6e65637420746f20736f6d652e2e2e
	NEWC
	STSLICE
	ENDC
	CALL $Terminal_no_obj_print$
}
PUSHCONT {
	PUSHINT 0
	NEWDICT
	PAIR
	;; decl: m_menu
	; for
	PUSHINT 0
	;; decl: i
	PUSHCONT {
		;; push identifier i
		DUP
		;; <
		;; get member length
		;; push identifier clientPairKeys
		GETGLOB 20
		INDEX 0
		LESS
	}
	PUSHCONT {
		;; index
		;; push identifier i
		DUP
		;; push identifier clientPairKeys
		GETGLOB 20
		INDEX 1
		PUSHINT 32
		DICTUGET
		THROWIFNOT 50
		;; decl: curAddr
		;; index
		;; push identifier curAddr
		DUP
		;; push identifier pairs
		GETGLOB 18
		PUSHINT 267
		DICTGETREF
		PUSHCONT {
			CTOS
			LDREF
			LDREF
			LDREF
			LDREF
			LDMSGADDR
			LDMSGADDR
			BLKSWAP 1, 6
			CTOS
			LDU 128
			LDMSGADDR
			BLKSWAP 1, 8
			CTOS
			LDMSGADDR
			PLDU 128
			TUPLE 10
		}
		PUSHCONT {
			NEWC
			ENDC
			NEWC
			ENDC
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			PUSHINT 0
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			PUSHINT 0
			TUPLE 10
		}
		IFELSE
		;; decl: ct
		;; get member name1
		;; push identifier ct
		DUP
		INDEX 0
		;; decl: n1
		;; get member name2
		;; push identifier ct
		PUSH S1
		INDEX 1
		;; decl: n2
		NEWC
		NULL
		TUPLE 2
		NEWC
		PUSHSLICE x5061697220746f6b656e73206e616d653a20
		CALL $storeStringInBuilders$
		CALL $appendToList$
		;; push identifier n1
		PUSH S3
		CTOS
		CALL $storeStringInBuilders$
		CALL $appendToList$
		PUSHSLICE x2d
		CALL $storeStringInBuilders$
		CALL $appendToList$
		;; push identifier n2
		PUSH S2
		CTOS
		CALL $storeStringInBuilders$
		CALL $appendToList$
		PUSHSLICE x0a5061697220616464726573733a20
		CALL $storeStringInBuilders$
		CALL $appendToList$
		;; push identifier curAddr
		PUSH S5
		CALL $convertAddressToHexString$
		PUSHSLICE x20
		CALL $storeStringInBuilders$
		CALL $appendToList$
		CALL $assembleList$
		;; decl: pairAddrAsStr
		; expValue
		PUSH S6
		; end expValue
		;; push identifier pairAddrAsStr
		PUSH S1
		NEWC
		ENDC
		PUSHINT 1534529821
		TUPLE 3
		;; array.push(..)
		UNTUPLE 3
		NEWC
		PUSH S3
		STREFR
		PUSH S2
		STREFR
		PUSH S1
		STUR 32
		XCHG s3
		BLKDROP 3
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S7
		; end colValue
		BLKDROP 5
		;; ++
		; expValue
		; end expValue
		INC
		; colValue
		; end colValue
	}
	WHILE
	DROP
	; end for
	; expValue
	DUP
	; end expValue
	PUSHSLICE x4261636b20746f206d656e75
	NEWC
	STSLICE
	ENDC
	NEWC
	ENDC
	PUSHINT 1770066373
	TUPLE 3
	;; array.push(..)
	UNTUPLE 3
	NEWC
	PUSH S3
	STREFR
	PUSH S2
	STREFR
	PUSH S1
	STUR 32
	XCHG s3
	BLKDROP 3
	SWAP
	UNPAIR
	PUSH S1
	INC
	XCHG s3
	ROTREV
	PUSHINT 32
	DICTUSETB
	PAIR
	; colValue
	NIP
	; end colValue
	PUSHSLICE x43686f6f7365207061697220616464726573733a
	NEWC
	STSLICE
	ENDC
	NEWC
	ENDC
	;; push identifier m_menu
	PUSH S2
	CALL $Menu_no_obj_select$
	DROP
}
IFELSE
;; end if
DROP
; end function returnAllLiquidity_setpair

.globl	returnAllLiquidity_getpair
.public	returnAllLiquidity_getpair
.type	returnAllLiquidity_getpair, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode index
LDU 32
ENDS
;; param: index
; function returnAllLiquidity_getpair
; expValue
; end expValue
;; index
;; push identifier index
DUP
;; push identifier clientPairKeys
GETGLOB 20
INDEX 1
PUSHINT 32
DICTUGET
THROWIFNOT 50
; colValue
SETGLOB 24
; end colValue
PUSHINT 1229043141
NEWC
ENDC
CALL $Terminal_no_obj_print$
DROP
; end function returnAllLiquidity_getpair
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	returnAllLiquidity_getpair_internal
.type	returnAllLiquidity_getpair_internal, @function
;; param: index
; function returnAllLiquidity_getpair
; expValue
; end expValue
;; index
;; push identifier index
DUP
;; push identifier clientPairKeys
GETGLOB 20
INDEX 1
PUSHINT 32
DICTUGET
THROWIFNOT 50
; colValue
SETGLOB 24
; end colValue
PUSHINT 1229043141
NEWC
ENDC
CALL $Terminal_no_obj_print$
DROP
; end function returnAllLiquidity_getpair

.globl	returnAllLiquidity
.public	returnAllLiquidity
.type	returnAllLiquidity, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; function returnAllLiquidity
NULL
;; decl: pubkey
;; Remote call IDEXclient.returnAllLiquidity
;; push identifier m_Client
GETGLOB 16
NEWC
STSLICECONST x497_
PUSHINT 930607843
STUR 32
PUSHINT 2133540044
STUR 32
PUSHINT 2
STUR 8
STONE
STONE
STONE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 4
STZEROES
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST 1
PUSHINT 512
STZEROES
;; push identifier pubkey
PUSH S2
ISNULL
PUSHCONT {
	STSLICECONST 0
}
PUSHCONT {
	STSLICECONST 1
	;; push identifier pubkey
	PUSH S2
	STUR 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x2c678f71
NEWC
;; pairAddr
;; push identifier m_pairReturnLiq
GETGLOB 24
STSLICER
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
DROP
; end function returnAllLiquidity
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	returnAllLiquidity_internal
.type	returnAllLiquidity_internal, @function
; function returnAllLiquidity
NULL
;; decl: pubkey
;; Remote call IDEXclient.returnAllLiquidity
;; push identifier m_Client
GETGLOB 16
NEWC
STSLICECONST x497_
PUSHINT 930607843
STUR 32
PUSHINT 2133540044
STUR 32
PUSHINT 2
STUR 8
STONE
STONE
STONE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 4
STZEROES
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST 1
PUSHINT 512
STZEROES
;; push identifier pubkey
PUSH S2
ISNULL
PUSHCONT {
	STSLICECONST 0
}
PUSHCONT {
	STSLICECONST 1
	;; push identifier pubkey
	PUSH S2
	STUR 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x2c678f71
NEWC
;; pairAddr
;; push identifier m_pairReturnLiq
GETGLOB 24
STSLICER
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
DROP
; end function returnAllLiquidity

.globl	scReturn
.public	scReturn
.type	scReturn, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode returnLiquidityStatus
LDI 1
ENDS
;; param: returnLiquidityStatus
; function scReturn
PUSHINT 842683031
PUSHSLICE x604c69717569646974792072657475726e656420737563636573732c20636865636b2062616c616e6365
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
DROP
; end function scReturn
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	scReturn_internal
.type	scReturn_internal, @function
;; param: returnLiquidityStatus
; function scReturn
PUSHINT 842683031
PUSHSLICE x604c69717569646974792072657475726e656420737563636573732c20636865636b2062616c616e6365
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
DROP
; end function scReturn

.globl	erReturn
.public	erReturn
.type	erReturn, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode sdkError
LDU 32
; Decode exitCode
LDU 32
ENDS
;; param: sdkError
;; param: exitCode
; function erReturn
PUSHINT 1024438445
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x73646b4572726f723a20
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier sdkError
PUSH S4
PUSHINT 0
FALSE
FALSE
CALL $convertIntToDecStr$
CALL $appendToList$
PUSHSLICE x0a65786974434f64653a
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier exitCode
PUSH S3
PUSHINT 0
FALSE
FALSE
CALL $convertIntToDecStr$
CALL $appendToList$
PUSHSLICE x0a536f6d65206572726f722e2e2e72657472793f
CALL $storeStringInBuilders$
CALL $appendToList$
CALL $assembleList$
CALL $Terminal_no_obj_inputBoolean$
DROP2
; end function erReturn
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	erReturn_internal
.type	erReturn_internal, @function
;; param: sdkError
;; param: exitCode
; function erReturn
PUSHINT 1024438445
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x73646b4572726f723a20
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier sdkError
PUSH S4
PUSHINT 0
FALSE
FALSE
CALL $convertIntToDecStr$
CALL $appendToList$
PUSHSLICE x0a65786974434f64653a
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier exitCode
PUSH S3
PUSHINT 0
FALSE
FALSE
CALL $convertIntToDecStr$
CALL $appendToList$
PUSHSLICE x0a536f6d65206572726f722e2e2e72657472793f
CALL $storeStringInBuilders$
CALL $appendToList$
CALL $assembleList$
CALL $Terminal_no_obj_inputBoolean$
DROP2
; end function erReturn

.globl	erReturnBool
.public	erReturnBool
.type	erReturnBool, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode value
LDI 1
ENDS
;; param: value
; function erReturnBool
;; if
;; push identifier value
DUP
PUSHCONT {
	PUSHINT 1229043141
	PUSHSLICE x52657472792072657475726e206c69717569646974792e2e2e
	NEWC
	STSLICE
	ENDC
	CALL $Terminal_no_obj_print$
}
PUSHCONT {
	PUSHINT 842683031
	PUSHSLICE x4261636b20746f206d656e752e2e2e
	NEWC
	STSLICE
	ENDC
	CALL $Terminal_no_obj_print$
}
IFELSE
;; end if
DROP
; end function erReturnBool
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	erReturnBool_internal
.type	erReturnBool_internal, @function
;; param: value
; function erReturnBool
;; if
;; push identifier value
DUP
PUSHCONT {
	PUSHINT 1229043141
	PUSHSLICE x52657472792072657475726e206c69717569646974792e2e2e
	NEWC
	STSLICE
	ENDC
	CALL $Terminal_no_obj_print$
}
PUSHCONT {
	PUSHINT 842683031
	PUSHSLICE x4261636b20746f206d656e752e2e2e
	NEWC
	STSLICE
	ENDC
	CALL $Terminal_no_obj_print$
}
IFELSE
;; end if
DROP
; end function erReturnBool

.globl	addLiquidityStep1
.public	addLiquidityStep1
.type	addLiquidityStep1, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode index
LDU 32
ENDS
;; param: index
; function addLiquidityStep1
;; if
;; get member length
;; push identifier clientPairKeys
GETGLOB 20
INDEX 0
EQINT 0
PUSHCONT {
	PUSHINT 842683031
	PUSHSLICE x596f752068617665206e6f20746f6b656e2070616972732c20706c6561736520636f6e6e65637420746f20736f6d652e2e2e
	NEWC
	STSLICE
	ENDC
	CALL $Terminal_no_obj_print$
}
PUSHCONT {
	PUSHINT 0
	NEWDICT
	PAIR
	;; decl: m_menu
	; for
	PUSHINT 0
	;; decl: i
	PUSHCONT {
		;; push identifier i
		DUP
		;; <
		;; get member length
		;; push identifier clientPairKeys
		GETGLOB 20
		INDEX 0
		LESS
	}
	PUSHCONT {
		;; index
		;; push identifier i
		DUP
		;; push identifier clientPairKeys
		GETGLOB 20
		INDEX 1
		PUSHINT 32
		DICTUGET
		THROWIFNOT 50
		;; decl: curAddr
		;; index
		;; push identifier curAddr
		DUP
		;; push identifier pairs
		GETGLOB 18
		PUSHINT 267
		DICTGETREF
		PUSHCONT {
			CTOS
			LDREF
			LDREF
			LDREF
			LDREF
			LDMSGADDR
			LDMSGADDR
			BLKSWAP 1, 6
			CTOS
			LDU 128
			LDMSGADDR
			BLKSWAP 1, 8
			CTOS
			LDMSGADDR
			PLDU 128
			TUPLE 10
		}
		PUSHCONT {
			NEWC
			ENDC
			NEWC
			ENDC
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			PUSHINT 0
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			PUSHINT 0
			TUPLE 10
		}
		IFELSE
		;; decl: ct
		;; get member name1
		;; push identifier ct
		DUP
		INDEX 0
		;; decl: n1
		;; get member name2
		;; push identifier ct
		PUSH S1
		INDEX 1
		;; decl: n2
		NEWC
		NULL
		TUPLE 2
		NEWC
		PUSHSLICE x5061697220746f6b656e73206e616d653a20
		CALL $storeStringInBuilders$
		CALL $appendToList$
		;; push identifier n1
		PUSH S3
		CTOS
		CALL $storeStringInBuilders$
		CALL $appendToList$
		PUSHSLICE x2d
		CALL $storeStringInBuilders$
		CALL $appendToList$
		;; push identifier n2
		PUSH S2
		CTOS
		CALL $storeStringInBuilders$
		CALL $appendToList$
		PUSHSLICE x0a5061697220616464726573733a20
		CALL $storeStringInBuilders$
		CALL $appendToList$
		;; push identifier curAddr
		PUSH S5
		CALL $convertAddressToHexString$
		CALL $assembleList$
		;; decl: pairAddrAsStr
		; expValue
		PUSH S6
		; end expValue
		;; push identifier pairAddrAsStr
		PUSH S1
		NEWC
		ENDC
		PUSHINT 930310397
		TUPLE 3
		;; array.push(..)
		UNTUPLE 3
		NEWC
		PUSH S3
		STREFR
		PUSH S2
		STREFR
		PUSH S1
		STUR 32
		XCHG s3
		BLKDROP 3
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S7
		; end colValue
		BLKDROP 5
		;; ++
		; expValue
		; end expValue
		INC
		; colValue
		; end colValue
	}
	WHILE
	DROP
	; end for
	; expValue
	DUP
	; end expValue
	PUSHSLICE x4261636b20746f206d656e75
	NEWC
	STSLICE
	ENDC
	NEWC
	ENDC
	PUSHINT 1770066373
	TUPLE 3
	;; array.push(..)
	UNTUPLE 3
	NEWC
	PUSH S3
	STREFR
	PUSH S2
	STREFR
	PUSH S1
	STUR 32
	XCHG s3
	BLKDROP 3
	SWAP
	UNPAIR
	PUSH S1
	INC
	XCHG s3
	ROTREV
	PUSHINT 32
	DICTUSETB
	PAIR
	; colValue
	NIP
	; end colValue
	PUSHSLICE x43686f6f7365207061697220616464726573733a
	NEWC
	STSLICE
	ENDC
	NEWC
	ENDC
	;; push identifier m_menu
	PUSH S2
	CALL $Menu_no_obj_select$
	DROP
}
IFELSE
;; end if
DROP
; end function addLiquidityStep1
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	addLiquidityStep1_internal
.type	addLiquidityStep1_internal, @function
;; param: index
; function addLiquidityStep1
;; if
;; get member length
;; push identifier clientPairKeys
GETGLOB 20
INDEX 0
EQINT 0
PUSHCONT {
	PUSHINT 842683031
	PUSHSLICE x596f752068617665206e6f20746f6b656e2070616972732c20706c6561736520636f6e6e65637420746f20736f6d652e2e2e
	NEWC
	STSLICE
	ENDC
	CALL $Terminal_no_obj_print$
}
PUSHCONT {
	PUSHINT 0
	NEWDICT
	PAIR
	;; decl: m_menu
	; for
	PUSHINT 0
	;; decl: i
	PUSHCONT {
		;; push identifier i
		DUP
		;; <
		;; get member length
		;; push identifier clientPairKeys
		GETGLOB 20
		INDEX 0
		LESS
	}
	PUSHCONT {
		;; index
		;; push identifier i
		DUP
		;; push identifier clientPairKeys
		GETGLOB 20
		INDEX 1
		PUSHINT 32
		DICTUGET
		THROWIFNOT 50
		;; decl: curAddr
		;; index
		;; push identifier curAddr
		DUP
		;; push identifier pairs
		GETGLOB 18
		PUSHINT 267
		DICTGETREF
		PUSHCONT {
			CTOS
			LDREF
			LDREF
			LDREF
			LDREF
			LDMSGADDR
			LDMSGADDR
			BLKSWAP 1, 6
			CTOS
			LDU 128
			LDMSGADDR
			BLKSWAP 1, 8
			CTOS
			LDMSGADDR
			PLDU 128
			TUPLE 10
		}
		PUSHCONT {
			NEWC
			ENDC
			NEWC
			ENDC
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			PUSHINT 0
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			PUSHINT 0
			TUPLE 10
		}
		IFELSE
		;; decl: ct
		;; get member name1
		;; push identifier ct
		DUP
		INDEX 0
		;; decl: n1
		;; get member name2
		;; push identifier ct
		PUSH S1
		INDEX 1
		;; decl: n2
		NEWC
		NULL
		TUPLE 2
		NEWC
		PUSHSLICE x5061697220746f6b656e73206e616d653a20
		CALL $storeStringInBuilders$
		CALL $appendToList$
		;; push identifier n1
		PUSH S3
		CTOS
		CALL $storeStringInBuilders$
		CALL $appendToList$
		PUSHSLICE x2d
		CALL $storeStringInBuilders$
		CALL $appendToList$
		;; push identifier n2
		PUSH S2
		CTOS
		CALL $storeStringInBuilders$
		CALL $appendToList$
		PUSHSLICE x0a5061697220616464726573733a20
		CALL $storeStringInBuilders$
		CALL $appendToList$
		;; push identifier curAddr
		PUSH S5
		CALL $convertAddressToHexString$
		CALL $assembleList$
		;; decl: pairAddrAsStr
		; expValue
		PUSH S6
		; end expValue
		;; push identifier pairAddrAsStr
		PUSH S1
		NEWC
		ENDC
		PUSHINT 930310397
		TUPLE 3
		;; array.push(..)
		UNTUPLE 3
		NEWC
		PUSH S3
		STREFR
		PUSH S2
		STREFR
		PUSH S1
		STUR 32
		XCHG s3
		BLKDROP 3
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S7
		; end colValue
		BLKDROP 5
		;; ++
		; expValue
		; end expValue
		INC
		; colValue
		; end colValue
	}
	WHILE
	DROP
	; end for
	; expValue
	DUP
	; end expValue
	PUSHSLICE x4261636b20746f206d656e75
	NEWC
	STSLICE
	ENDC
	NEWC
	ENDC
	PUSHINT 1770066373
	TUPLE 3
	;; array.push(..)
	UNTUPLE 3
	NEWC
	PUSH S3
	STREFR
	PUSH S2
	STREFR
	PUSH S1
	STUR 32
	XCHG s3
	BLKDROP 3
	SWAP
	UNPAIR
	PUSH S1
	INC
	XCHG s3
	ROTREV
	PUSHINT 32
	DICTUSETB
	PAIR
	; colValue
	NIP
	; end colValue
	PUSHSLICE x43686f6f7365207061697220616464726573733a
	NEWC
	STSLICE
	ENDC
	NEWC
	ENDC
	;; push identifier m_menu
	PUSH S2
	CALL $Menu_no_obj_select$
	DROP
}
IFELSE
;; end if
DROP
; end function addLiquidityStep1

.globl	addLiquidityStep2
.public	addLiquidityStep2
.type	addLiquidityStep2, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode index
LDU 32
ENDS
;; param: index
; function addLiquidityStep2
; expValue
; end expValue
;; index
;; push identifier index
DUP
;; push identifier clientPairKeys
GETGLOB 20
INDEX 1
PUSHINT 32
DICTUGET
THROWIFNOT 50
; colValue
SETGLOB 25
; end colValue
NULL
;; decl: pubkey
;; Remote call IDEXpair.getReservesBalance
;; push identifier m_liquidPair
GETGLOB 25
NEWC
STSLICECONST x497_
PUSHINT 162891680
STUR 32
PUSHINT 1184379414
STUR 32
PUSHINT 2
STUR 8
STONE
STONE
STONE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 4
STZEROES
STSLICECONST 0
PUSHINT 2
STZEROES
;; push identifier pubkey
PUSH S1
ISNULL
PUSHCONT {
	STSLICECONST 0
}
PUSHCONT {
	THROW 64
	STSLICECONST 1
	;; push identifier pubkey
	PUSH S1
	STUR 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x02420619
ENDC
PUSHINT 1
SENDRAWMSG
DROP2
; end function addLiquidityStep2
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	addLiquidityStep2_internal
.type	addLiquidityStep2_internal, @function
;; param: index
; function addLiquidityStep2
; expValue
; end expValue
;; index
;; push identifier index
DUP
;; push identifier clientPairKeys
GETGLOB 20
INDEX 1
PUSHINT 32
DICTUGET
THROWIFNOT 50
; colValue
SETGLOB 25
; end colValue
NULL
;; decl: pubkey
;; Remote call IDEXpair.getReservesBalance
;; push identifier m_liquidPair
GETGLOB 25
NEWC
STSLICECONST x497_
PUSHINT 162891680
STUR 32
PUSHINT 1184379414
STUR 32
PUSHINT 2
STUR 8
STONE
STONE
STONE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 4
STZEROES
STSLICECONST 0
PUSHINT 2
STZEROES
;; push identifier pubkey
PUSH S1
ISNULL
PUSHCONT {
	STSLICECONST 0
}
PUSHCONT {
	THROW 64
	STSLICECONST 1
	;; push identifier pubkey
	PUSH S1
	STUR 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x02420619
ENDC
PUSHINT 1
SENDRAWMSG
DROP2
; end function addLiquidityStep2

.globl	setReservesData
.public	setReservesData
.type	setReservesData, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode balanceReserveA
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode balanceReserveB
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
ENDS
;; param: balanceReserveA
;; param: balanceReserveB
; function setReservesData
; expValue
; end expValue
;; push identifier balanceReserveA
PUSH S1
; colValue
SETGLOB 26
; end colValue
; expValue
; end expValue
;; push identifier balanceReserveB
DUP
; colValue
SETGLOB 27
; end colValue
;; index
;; push identifier m_liquidPair
GETGLOB 25
;; push identifier pairs
GETGLOB 18
PUSHINT 267
DICTGETREF
PUSHCONT {
	CTOS
	LDREF
	LDREF
	LDREF
	LDREF
	LDMSGADDR
	LDMSGADDR
	BLKSWAP 1, 6
	CTOS
	LDU 128
	LDMSGADDR
	BLKSWAP 1, 8
	CTOS
	LDMSGADDR
	PLDU 128
	TUPLE 10
}
PUSHCONT {
	NEWC
	ENDC
	NEWC
	ENDC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	TUPLE 10
}
IFELSE
;; decl: ct
;; get member name1
;; push identifier ct
DUP
INDEX 0
;; decl: nF
;; get member name2
;; push identifier ct
PUSH S1
INDEX 1
;; decl: nS
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x526573657276652062616c616e6365206f6620
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier nF
PUSH S4
CTOS
CALL $storeStringInBuilders$
CALL $appendToList$
PUSHSLICE x3a20
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier balanceReserveAS
GETGLOB 26
PUSHINT 0
FALSE
FALSE
CALL $convertIntToDecStr$
CALL $appendToList$
PUSHSLICE x20746f6b656e730a526573657276652062616c616e6365206f6620
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier nS
PUSH S3
CTOS
CALL $storeStringInBuilders$
CALL $appendToList$
PUSHSLICE x3a20
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier balanceReserveBS
GETGLOB 27
PUSHINT 0
FALSE
FALSE
CALL $convertIntToDecStr$
CALL $appendToList$
PUSHSLICE x206e616e6f746f6b656e73
CALL $storeStringInBuilders$
CALL $appendToList$
CALL $assembleList$
CALL $Terminal_no_obj_print$
PUSHINT 1916955054
PUSHSLICE x26520
PUSHSLICE x2a4e6f74652a0a2d20796f752073686f756c642061646420796f7572206e616e6f746f6b656e7320776974682070726f706f7274696f6e206261736564206f6e20726573657276652062616c616e6365730a2d20736d616c6c6572206e616e6f746f6b656e2076616c756520696e20726174652063616e206e6f74206
NEWC
STSLICE
STSLICE
PUSHSLICE x6c657373207468656e20310a6578616d706c653a206966207261746520746f6b656e412f746f6b656e42202d20312f31302c206d696e696d616c2076616c756573206d757374206265203120666f72206e616e6f746f6b656e20412c20313020666f722042
NEWC
STSLICE
STBREFR
ENDC
CALL $Terminal_no_obj_print$
BLKDROP 5
; end function setReservesData
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setReservesData_internal
.type	setReservesData_internal, @function
;; param: balanceReserveA
;; param: balanceReserveB
; function setReservesData
; expValue
; end expValue
;; push identifier balanceReserveA
PUSH S1
; colValue
SETGLOB 26
; end colValue
; expValue
; end expValue
;; push identifier balanceReserveB
DUP
; colValue
SETGLOB 27
; end colValue
;; index
;; push identifier m_liquidPair
GETGLOB 25
;; push identifier pairs
GETGLOB 18
PUSHINT 267
DICTGETREF
PUSHCONT {
	CTOS
	LDREF
	LDREF
	LDREF
	LDREF
	LDMSGADDR
	LDMSGADDR
	BLKSWAP 1, 6
	CTOS
	LDU 128
	LDMSGADDR
	BLKSWAP 1, 8
	CTOS
	LDMSGADDR
	PLDU 128
	TUPLE 10
}
PUSHCONT {
	NEWC
	ENDC
	NEWC
	ENDC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	TUPLE 10
}
IFELSE
;; decl: ct
;; get member name1
;; push identifier ct
DUP
INDEX 0
;; decl: nF
;; get member name2
;; push identifier ct
PUSH S1
INDEX 1
;; decl: nS
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x526573657276652062616c616e6365206f6620
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier nF
PUSH S4
CTOS
CALL $storeStringInBuilders$
CALL $appendToList$
PUSHSLICE x3a20
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier balanceReserveAS
GETGLOB 26
PUSHINT 0
FALSE
FALSE
CALL $convertIntToDecStr$
CALL $appendToList$
PUSHSLICE x20746f6b656e730a526573657276652062616c616e6365206f6620
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier nS
PUSH S3
CTOS
CALL $storeStringInBuilders$
CALL $appendToList$
PUSHSLICE x3a20
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier balanceReserveBS
GETGLOB 27
PUSHINT 0
FALSE
FALSE
CALL $convertIntToDecStr$
CALL $appendToList$
PUSHSLICE x206e616e6f746f6b656e73
CALL $storeStringInBuilders$
CALL $appendToList$
CALL $assembleList$
CALL $Terminal_no_obj_print$
PUSHINT 1916955054
PUSHSLICE x26520
PUSHSLICE x2a4e6f74652a0a2d20796f752073686f756c642061646420796f7572206e616e6f746f6b656e7320776974682070726f706f7274696f6e206261736564206f6e20726573657276652062616c616e6365730a2d20736d616c6c6572206e616e6f746f6b656e2076616c756520696e20726174652063616e206e6f74206
NEWC
STSLICE
STSLICE
PUSHSLICE x6c657373207468656e20310a6578616d706c653a206966207261746520746f6b656e412f746f6b656e42202d20312f31302c206d696e696d616c2076616c756573206d757374206265203120666f72206e616e6f746f6b656e20412c20313020666f722042
NEWC
STSLICE
STBREFR
ENDC
CALL $Terminal_no_obj_print$
BLKDROP 5
; end function setReservesData

.globl	setvalueToken1
.public	setvalueToken1
.type	setvalueToken1, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; function setvalueToken1
;; index
;; push identifier m_liquidPair
GETGLOB 25
;; push identifier PairWallets
GETGLOB 17
PUSHINT 267
DICTGET
PUSHCONT {
	LDMSGADDR
	TUPLE 2
}
PUSHCONT {
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	TUPLE 2
}
IFELSE
;; decl: pw
;; get member wallet1
;; push identifier pw
DUP
INDEX 0
;; decl: currA
;; index
;; push identifier currA
DUP
;; push identifier wallets
GETGLOB 21
PUSHINT 267
DICTGET
PUSHCONT {
	LDREF
	LDMSGADDR
	PLDU 128
	TUPLE 3
}
PUSHCONT {
	NEWC
	ENDC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	TUPLE 3
}
IFELSE
;; decl: wt
; expValue
; end expValue
;; get member balanceToken
;; push identifier wt
DUP
INDEX 2
; colValue
SETGLOB 30
; end colValue
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x546f6b656e206e616d653a20
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier nF
GETGLOB 28
CTOS
CALL $storeStringInBuilders$
CALL $appendToList$
PUSHSLICE x0a42616c616e63653a20
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier balCurrA
GETGLOB 30
PUSHINT 0
FALSE
FALSE
CALL $convertIntToDecStr$
CALL $appendToList$
CALL $assembleList$
CALL $Terminal_no_obj_print$
PUSHINT 250191013
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x456e74657220
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier nF
GETGLOB 28
CTOS
CALL $storeStringInBuilders$
CALL $appendToList$
PUSHSLICE x2076616c75653a
CALL $storeStringInBuilders$
CALL $appendToList$
CALL $assembleList$
CALL $Terminal_no_obj_inputUint$
BLKDROP 3
; end function setvalueToken1
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setvalueToken1_internal
.type	setvalueToken1_internal, @function
; function setvalueToken1
;; index
;; push identifier m_liquidPair
GETGLOB 25
;; push identifier PairWallets
GETGLOB 17
PUSHINT 267
DICTGET
PUSHCONT {
	LDMSGADDR
	TUPLE 2
}
PUSHCONT {
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	TUPLE 2
}
IFELSE
;; decl: pw
;; get member wallet1
;; push identifier pw
DUP
INDEX 0
;; decl: currA
;; index
;; push identifier currA
DUP
;; push identifier wallets
GETGLOB 21
PUSHINT 267
DICTGET
PUSHCONT {
	LDREF
	LDMSGADDR
	PLDU 128
	TUPLE 3
}
PUSHCONT {
	NEWC
	ENDC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	TUPLE 3
}
IFELSE
;; decl: wt
; expValue
; end expValue
;; get member balanceToken
;; push identifier wt
DUP
INDEX 2
; colValue
SETGLOB 30
; end colValue
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x546f6b656e206e616d653a20
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier nF
GETGLOB 28
CTOS
CALL $storeStringInBuilders$
CALL $appendToList$
PUSHSLICE x0a42616c616e63653a20
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier balCurrA
GETGLOB 30
PUSHINT 0
FALSE
FALSE
CALL $convertIntToDecStr$
CALL $appendToList$
CALL $assembleList$
CALL $Terminal_no_obj_print$
PUSHINT 250191013
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x456e74657220
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier nF
GETGLOB 28
CTOS
CALL $storeStringInBuilders$
CALL $appendToList$
PUSHSLICE x2076616c75653a
CALL $storeStringInBuilders$
CALL $appendToList$
CALL $assembleList$
CALL $Terminal_no_obj_inputUint$
BLKDROP 3
; end function setvalueToken1

.globl	addLiquidityStep3
.public	addLiquidityStep3
.type	addLiquidityStep3, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode value
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
ENDS
;; param: value
; function addLiquidityStep3
;; push identifier value
DUP
;; uint128
UFITS 128
; expValue
; end expValue
; colValue
SETGLOB 31
; end colValue
;; if
;; push identifier m_liquidValA
GETGLOB 31
LESSINT 1
PUSHCONT {
	PUSHINT 1916955054
	PUSHSLICE x4d757374206265206d6f7265207468656e2031206e616e6f746f6b656e2e2e2e7265747279
	NEWC
	STSLICE
	ENDC
	CALL $Terminal_no_obj_print$
}
PUSHCONT {
	;; if
	;; push identifier m_liquidValA
	GETGLOB 31
	;; >
	;; push identifier balCurrA
	GETGLOB 30
	GREATER
	PUSHCONT {
		PUSHINT 1916955054
		PUSHSLICE x4e6f7420656e6f756768742062616c616e63652e2e2e7265747279
		NEWC
		STSLICE
		ENDC
		CALL $Terminal_no_obj_print$
	}
	PUSHCONT {
		PUSHINT 202466221
		PUSHSLICE x436865636b696e672e2e2e
		NEWC
		STSLICE
		ENDC
		CALL $Terminal_no_obj_print$
	}
	IFELSE
	;; end if
}
IFELSE
;; end if
DROP
; end function addLiquidityStep3
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	addLiquidityStep3_internal
.type	addLiquidityStep3_internal, @function
;; param: value
; function addLiquidityStep3
;; push identifier value
DUP
;; uint128
UFITS 128
; expValue
; end expValue
; colValue
SETGLOB 31
; end colValue
;; if
;; push identifier m_liquidValA
GETGLOB 31
LESSINT 1
PUSHCONT {
	PUSHINT 1916955054
	PUSHSLICE x4d757374206265206d6f7265207468656e2031206e616e6f746f6b656e2e2e2e7265747279
	NEWC
	STSLICE
	ENDC
	CALL $Terminal_no_obj_print$
}
PUSHCONT {
	;; if
	;; push identifier m_liquidValA
	GETGLOB 31
	;; >
	;; push identifier balCurrA
	GETGLOB 30
	GREATER
	PUSHCONT {
		PUSHINT 1916955054
		PUSHSLICE x4e6f7420656e6f756768742062616c616e63652e2e2e7265747279
		NEWC
		STSLICE
		ENDC
		CALL $Terminal_no_obj_print$
	}
	PUSHCONT {
		PUSHINT 202466221
		PUSHSLICE x436865636b696e672e2e2e
		NEWC
		STSLICE
		ENDC
		CALL $Terminal_no_obj_print$
	}
	IFELSE
	;; end if
}
IFELSE
;; end if
DROP
; end function addLiquidityStep3

.globl	valueBinput
.public	valueBinput
.type	valueBinput, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; function valueBinput
;; index
;; push identifier m_liquidPair
GETGLOB 25
;; push identifier PairWallets
GETGLOB 17
PUSHINT 267
DICTGET
PUSHCONT {
	LDMSGADDR
	TUPLE 2
}
PUSHCONT {
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	TUPLE 2
}
IFELSE
;; decl: pw
;; get member wallet2
;; push identifier pw
DUP
INDEX 1
;; decl: currB
;; index
;; push identifier currB
DUP
;; push identifier wallets
GETGLOB 21
PUSHINT 267
DICTGET
PUSHCONT {
	LDREF
	LDMSGADDR
	PLDU 128
	TUPLE 3
}
PUSHCONT {
	NEWC
	ENDC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	TUPLE 3
}
IFELSE
;; decl: wt
; expValue
; end expValue
;; get member balanceToken
;; push identifier wt
DUP
INDEX 2
; colValue
PUSHINT 32
SETGLOBVAR
; end colValue
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x546f6b656e206e616d653a20
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier nS
GETGLOB 29
CTOS
CALL $storeStringInBuilders$
CALL $appendToList$
PUSHSLICE x0a42616c616e63653a20
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier balCurrB
PUSHINT 32
GETGLOBVAR
PUSHINT 0
FALSE
FALSE
CALL $convertIntToDecStr$
CALL $appendToList$
CALL $assembleList$
CALL $Terminal_no_obj_print$
PUSHINT 1033174791
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x456e74657220
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier nS
GETGLOB 29
CTOS
CALL $storeStringInBuilders$
CALL $appendToList$
PUSHSLICE x2076616c75653a
CALL $storeStringInBuilders$
CALL $appendToList$
CALL $assembleList$
CALL $Terminal_no_obj_inputUint$
BLKDROP 3
; end function valueBinput
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	valueBinput_internal
.type	valueBinput_internal, @function
; function valueBinput
;; index
;; push identifier m_liquidPair
GETGLOB 25
;; push identifier PairWallets
GETGLOB 17
PUSHINT 267
DICTGET
PUSHCONT {
	LDMSGADDR
	TUPLE 2
}
PUSHCONT {
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	TUPLE 2
}
IFELSE
;; decl: pw
;; get member wallet2
;; push identifier pw
DUP
INDEX 1
;; decl: currB
;; index
;; push identifier currB
DUP
;; push identifier wallets
GETGLOB 21
PUSHINT 267
DICTGET
PUSHCONT {
	LDREF
	LDMSGADDR
	PLDU 128
	TUPLE 3
}
PUSHCONT {
	NEWC
	ENDC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	TUPLE 3
}
IFELSE
;; decl: wt
; expValue
; end expValue
;; get member balanceToken
;; push identifier wt
DUP
INDEX 2
; colValue
PUSHINT 32
SETGLOBVAR
; end colValue
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x546f6b656e206e616d653a20
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier nS
GETGLOB 29
CTOS
CALL $storeStringInBuilders$
CALL $appendToList$
PUSHSLICE x0a42616c616e63653a20
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier balCurrB
PUSHINT 32
GETGLOBVAR
PUSHINT 0
FALSE
FALSE
CALL $convertIntToDecStr$
CALL $appendToList$
CALL $assembleList$
CALL $Terminal_no_obj_print$
PUSHINT 1033174791
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x456e74657220
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier nS
GETGLOB 29
CTOS
CALL $storeStringInBuilders$
CALL $appendToList$
PUSHSLICE x2076616c75653a
CALL $storeStringInBuilders$
CALL $appendToList$
CALL $assembleList$
CALL $Terminal_no_obj_inputUint$
BLKDROP 3
; end function valueBinput

.globl	addLiquidityStep4SHOW
.public	addLiquidityStep4SHOW
.type	addLiquidityStep4SHOW, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode value
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
ENDS
;; param: value
; function addLiquidityStep4SHOW
;; push identifier value
DUP
;; uint128
UFITS 128
; expValue
; end expValue
; colValue
PUSHINT 33
SETGLOBVAR
; end colValue
;; if
;; push identifier m_liquidValB
PUSHINT 33
GETGLOBVAR
LESSINT 1
PUSHCONT {
	PUSHINT 202466221
	PUSHSLICE x4d757374206265206d6f7265207468656e2031206e616e6f746f6b656e2e2e2e7265747279
	NEWC
	STSLICE
	ENDC
	CALL $Terminal_no_obj_print$
}
PUSHCONT {
	;; if
	;; push identifier m_liquidValB
	PUSHINT 33
	GETGLOBVAR
	;; >
	;; push identifier balCurrB
	PUSHINT 32
	GETGLOBVAR
	GREATER
	PUSHCONT {
		PUSHINT 202466221
		PUSHSLICE x4e6f7420656e6f756768742062616c616e63652e2e2e7265747279
		NEWC
		STSLICE
		ENDC
		CALL $Terminal_no_obj_print$
	}
	PUSHCONT {
		PUSHINT 1625019811
		NEWC
		NULL
		TUPLE 2
		NEWC
		PUSHSLICE x5061697220616464726573733a20
		CALL $storeStringInBuilders$
		CALL $appendToList$
		;; push identifier m_liquidPair
		GETGLOB 25
		CALL $convertAddressToHexString$
		PUSHSLICE x0a416d6f756e7420413a20
		CALL $storeStringInBuilders$
		CALL $appendToList$
		;; push identifier m_liquidValA
		GETGLOB 31
		PUSHINT 0
		FALSE
		FALSE
		CALL $convertIntToDecStr$
		CALL $appendToList$
		PUSHSLICE x0a416d6f756e7420423a20
		CALL $storeStringInBuilders$
		CALL $appendToList$
		;; push identifier m_liquidValB
		PUSHINT 33
		GETGLOBVAR
		PUSHINT 0
		FALSE
		FALSE
		CALL $convertIntToDecStr$
		CALL $appendToList$
		CALL $assembleList$
		CALL $Terminal_no_obj_print$
	}
	IFELSE
	;; end if
}
IFELSE
;; end if
DROP
; end function addLiquidityStep4SHOW
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	addLiquidityStep4SHOW_internal
.type	addLiquidityStep4SHOW_internal, @function
;; param: value
; function addLiquidityStep4SHOW
;; push identifier value
DUP
;; uint128
UFITS 128
; expValue
; end expValue
; colValue
PUSHINT 33
SETGLOBVAR
; end colValue
;; if
;; push identifier m_liquidValB
PUSHINT 33
GETGLOBVAR
LESSINT 1
PUSHCONT {
	PUSHINT 202466221
	PUSHSLICE x4d757374206265206d6f7265207468656e2031206e616e6f746f6b656e2e2e2e7265747279
	NEWC
	STSLICE
	ENDC
	CALL $Terminal_no_obj_print$
}
PUSHCONT {
	;; if
	;; push identifier m_liquidValB
	PUSHINT 33
	GETGLOBVAR
	;; >
	;; push identifier balCurrB
	PUSHINT 32
	GETGLOBVAR
	GREATER
	PUSHCONT {
		PUSHINT 202466221
		PUSHSLICE x4e6f7420656e6f756768742062616c616e63652e2e2e7265747279
		NEWC
		STSLICE
		ENDC
		CALL $Terminal_no_obj_print$
	}
	PUSHCONT {
		PUSHINT 1625019811
		NEWC
		NULL
		TUPLE 2
		NEWC
		PUSHSLICE x5061697220616464726573733a20
		CALL $storeStringInBuilders$
		CALL $appendToList$
		;; push identifier m_liquidPair
		GETGLOB 25
		CALL $convertAddressToHexString$
		PUSHSLICE x0a416d6f756e7420413a20
		CALL $storeStringInBuilders$
		CALL $appendToList$
		;; push identifier m_liquidValA
		GETGLOB 31
		PUSHINT 0
		FALSE
		FALSE
		CALL $convertIntToDecStr$
		CALL $appendToList$
		PUSHSLICE x0a416d6f756e7420423a20
		CALL $storeStringInBuilders$
		CALL $appendToList$
		;; push identifier m_liquidValB
		PUSHINT 33
		GETGLOBVAR
		PUSHINT 0
		FALSE
		FALSE
		CALL $convertIntToDecStr$
		CALL $appendToList$
		CALL $assembleList$
		CALL $Terminal_no_obj_print$
	}
	IFELSE
	;; end if
}
IFELSE
;; end if
DROP
; end function addLiquidityStep4SHOW

.globl	addLiquidityStep4
.public	addLiquidityStep4
.type	addLiquidityStep4, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; function addLiquidityStep4
NULL
;; decl: pubkey
;; Remote call IDEXclient.makeABdepositToPair
;; push identifier m_Client
GETGLOB 16
NEWC
STSLICECONST x497_
PUSHINT 21040933
STUR 32
PUSHINT 676826262
STUR 32
PUSHINT 2
STUR 8
STONE
STONE
STONE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 4
STZEROES
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST 1
PUSHINT 512
STZEROES
;; push identifier pubkey
PUSH S2
ISNULL
PUSHCONT {
	STSLICECONST 0
}
PUSHCONT {
	STSLICECONST 1
	;; push identifier pubkey
	PUSH S2
	STUR 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x6a40dd11
NEWC
;; pairAddr
;; push identifier m_liquidPair
GETGLOB 25
STSLICER
;; qtyA
;; push identifier m_liquidValA
GETGLOB 31
STUR 128
;; qtyB
;; push identifier m_liquidValB
PUSHINT 33
GETGLOBVAR
STUR 128
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
DROP
; end function addLiquidityStep4
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	addLiquidityStep4_internal
.type	addLiquidityStep4_internal, @function
; function addLiquidityStep4
NULL
;; decl: pubkey
;; Remote call IDEXclient.makeABdepositToPair
;; push identifier m_Client
GETGLOB 16
NEWC
STSLICECONST x497_
PUSHINT 21040933
STUR 32
PUSHINT 676826262
STUR 32
PUSHINT 2
STUR 8
STONE
STONE
STONE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 4
STZEROES
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST 1
PUSHINT 512
STZEROES
;; push identifier pubkey
PUSH S2
ISNULL
PUSHCONT {
	STSLICECONST 0
}
PUSHCONT {
	STSLICECONST 1
	;; push identifier pubkey
	PUSH S2
	STUR 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x6a40dd11
NEWC
;; pairAddr
;; push identifier m_liquidPair
GETGLOB 25
STSLICER
;; qtyA
;; push identifier m_liquidValA
GETGLOB 31
STUR 128
;; qtyB
;; push identifier m_liquidValB
PUSHINT 33
GETGLOBVAR
STUR 128
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
DROP
; end function addLiquidityStep4

.globl	addDepositABSucc
.public	addDepositABSucc
.type	addDepositABSucc, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode makeDepositStatus
LDI 1
ENDS
;; param: makeDepositStatus
; function addDepositABSucc
PUSHINT 1785250229
PUSHSLICE x537563636573732c20706c65617365207761697420666577207365636f6e6473207768696c65206465706f7369742077616c6c65742077696c6c2067657420746f6b656e7320287e31302d3135207365637329
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
DROP
; end function addDepositABSucc
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	addDepositABSucc_internal
.type	addDepositABSucc_internal, @function
;; param: makeDepositStatus
; function addDepositABSucc
PUSHINT 1785250229
PUSHSLICE x537563636573732c20706c65617365207761697420666577207365636f6e6473207768696c65206465706f7369742077616c6c65742077696c6c2067657420746f6b656e7320287e31302d3135207365637329
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
DROP
; end function addDepositABSucc

.globl	addDepositError
.public	addDepositError
.type	addDepositError, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode sdkError
LDU 32
; Decode exitCode
LDU 32
ENDS
;; param: sdkError
;; param: exitCode
; function addDepositError
PUSHINT 778859508
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x73646b4572726f723a20
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier sdkError
PUSH S4
PUSHINT 0
FALSE
FALSE
CALL $convertIntToDecStr$
CALL $appendToList$
PUSHSLICE x0a65786974434f64653a
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier exitCode
PUSH S3
PUSHINT 0
FALSE
FALSE
CALL $convertIntToDecStr$
CALL $appendToList$
PUSHSLICE x0a536f6d65206572726f722e2e2e72657472793f
CALL $storeStringInBuilders$
CALL $appendToList$
CALL $assembleList$
CALL $Terminal_no_obj_inputBoolean$
DROP2
; end function addDepositError
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	addDepositError_internal
.type	addDepositError_internal, @function
;; param: sdkError
;; param: exitCode
; function addDepositError
PUSHINT 778859508
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x73646b4572726f723a20
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier sdkError
PUSH S4
PUSHINT 0
FALSE
FALSE
CALL $convertIntToDecStr$
CALL $appendToList$
PUSHSLICE x0a65786974434f64653a
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier exitCode
PUSH S3
PUSHINT 0
FALSE
FALSE
CALL $convertIntToDecStr$
CALL $appendToList$
PUSHSLICE x0a536f6d65206572726f722e2e2e72657472793f
CALL $storeStringInBuilders$
CALL $appendToList$
CALL $assembleList$
CALL $Terminal_no_obj_inputBoolean$
DROP2
; end function addDepositError

.globl	AddDepositErrorBool
.public	AddDepositErrorBool
.type	AddDepositErrorBool, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode value
LDI 1
ENDS
;; param: value
; function AddDepositErrorBool
;; if
;; push identifier value
DUP
PUSHCONT {
	PUSHINT 1625019811
	PUSHSLICE x52657472792e2e2e
	NEWC
	STSLICE
	ENDC
	CALL $Terminal_no_obj_print$
}
PUSHCONT {
	PUSHINT 842683031
	PUSHSLICE x4261636b20746f206d656e752e2e2e
	NEWC
	STSLICE
	ENDC
	CALL $Terminal_no_obj_print$
}
IFELSE
;; end if
DROP
; end function AddDepositErrorBool
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	AddDepositErrorBool_internal
.type	AddDepositErrorBool_internal, @function
;; param: value
; function AddDepositErrorBool
;; if
;; push identifier value
DUP
PUSHCONT {
	PUSHINT 1625019811
	PUSHSLICE x52657472792e2e2e
	NEWC
	STSLICE
	ENDC
	CALL $Terminal_no_obj_print$
}
PUSHCONT {
	PUSHINT 842683031
	PUSHSLICE x4261636b20746f206d656e752e2e2e
	NEWC
	STSLICE
	ENDC
	CALL $Terminal_no_obj_print$
}
IFELSE
;; end if
DROP
; end function AddDepositErrorBool

.globl	addLiquidityStep5
.public	addLiquidityStep5
.type	addLiquidityStep5, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; function addLiquidityStep5
NULL
;; decl: pubkey
;; Remote call IDEXclient.processLiquidity
;; push identifier m_Client
GETGLOB 16
NEWC
STSLICECONST x497_
PUSHINT 654890109
STUR 32
PUSHINT 842316976
STUR 32
PUSHINT 2
STUR 8
STONE
STONE
STONE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 4
STZEROES
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST 1
PUSHINT 512
STZEROES
;; push identifier pubkey
PUSH S2
ISNULL
PUSHCONT {
	STSLICECONST 0
}
PUSHCONT {
	STSLICECONST 1
	;; push identifier pubkey
	PUSH S2
	STUR 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x7270c783
NEWC
;; pairAddr
;; push identifier m_liquidPair
GETGLOB 25
STSLICER
;; qtyA
;; push identifier m_liquidValA
GETGLOB 31
STUR 128
;; qtyB
;; push identifier m_liquidValB
PUSHINT 33
GETGLOBVAR
STUR 128
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
DROP
; end function addLiquidityStep5
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	addLiquidityStep5_internal
.type	addLiquidityStep5_internal, @function
; function addLiquidityStep5
NULL
;; decl: pubkey
;; Remote call IDEXclient.processLiquidity
;; push identifier m_Client
GETGLOB 16
NEWC
STSLICECONST x497_
PUSHINT 654890109
STUR 32
PUSHINT 842316976
STUR 32
PUSHINT 2
STUR 8
STONE
STONE
STONE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 4
STZEROES
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST 1
PUSHINT 512
STZEROES
;; push identifier pubkey
PUSH S2
ISNULL
PUSHCONT {
	STSLICECONST 0
}
PUSHCONT {
	STSLICECONST 1
	;; push identifier pubkey
	PUSH S2
	STUR 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x7270c783
NEWC
;; pairAddr
;; push identifier m_liquidPair
GETGLOB 25
STSLICER
;; qtyA
;; push identifier m_liquidValA
GETGLOB 31
STUR 128
;; qtyB
;; push identifier m_liquidValB
PUSHINT 33
GETGLOBVAR
STUR 128
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
DROP
; end function addLiquidityStep5

.globl	addLiquiditySucess
.public	addLiquiditySucess
.type	addLiquiditySucess, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode processLiquidityStatus
LDI 1
ENDS
;; param: processLiquidityStatus
; function addLiquiditySucess
PUSHINT 842683031
PUSHSLICE x416464696e67206c697175696469747920636f6d706c6574652e2e2e
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
DROP
; end function addLiquiditySucess
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	addLiquiditySucess_internal
.type	addLiquiditySucess_internal, @function
;; param: processLiquidityStatus
; function addLiquiditySucess
PUSHINT 842683031
PUSHSLICE x416464696e67206c697175696469747920636f6d706c6574652e2e2e
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
DROP
; end function addLiquiditySucess

.globl	addLiquidityBool
.public	addLiquidityBool
.type	addLiquidityBool, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode value
LDI 1
ENDS
;; param: value
; function addLiquidityBool
;; if
;; push identifier value
DUP
PUSHCONT {
	PUSHINT 1785250229
	PUSHSLICE x52657472792e2e2e
	NEWC
	STSLICE
	ENDC
	CALL $Terminal_no_obj_print$
}
PUSHCONT {
	PUSHINT 842683031
	PUSHSLICE x4261636b20746f206d656e752e2e2e
	NEWC
	STSLICE
	ENDC
	CALL $Terminal_no_obj_print$
}
IFELSE
;; end if
DROP
; end function addLiquidityBool
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	addLiquidityBool_internal
.type	addLiquidityBool_internal, @function
;; param: value
; function addLiquidityBool
;; if
;; push identifier value
DUP
PUSHCONT {
	PUSHINT 1785250229
	PUSHSLICE x52657472792e2e2e
	NEWC
	STSLICE
	ENDC
	CALL $Terminal_no_obj_print$
}
PUSHCONT {
	PUSHINT 842683031
	PUSHSLICE x4261636b20746f206d656e752e2e2e
	NEWC
	STSLICE
	ENDC
	CALL $Terminal_no_obj_print$
}
IFELSE
;; end if
DROP
; end function addLiquidityBool

.globl	addLiquidityError
.public	addLiquidityError
.type	addLiquidityError, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode sdkError
LDU 32
; Decode exitCode
LDU 32
ENDS
;; param: sdkError
;; param: exitCode
; function addLiquidityError
PUSHINT 368573565
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x73646b4572726f723a20
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier sdkError
PUSH S4
PUSHINT 0
FALSE
FALSE
CALL $convertIntToDecStr$
CALL $appendToList$
PUSHSLICE x0a65786974434f64653a
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier exitCode
PUSH S3
PUSHINT 0
FALSE
FALSE
CALL $convertIntToDecStr$
CALL $appendToList$
PUSHSLICE x0a536f6d65206572726f722e2e2e72657472793f
CALL $storeStringInBuilders$
CALL $appendToList$
CALL $assembleList$
CALL $Terminal_no_obj_inputBoolean$
DROP2
; end function addLiquidityError
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	addLiquidityError_internal
.type	addLiquidityError_internal, @function
;; param: sdkError
;; param: exitCode
; function addLiquidityError
PUSHINT 368573565
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x73646b4572726f723a20
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier sdkError
PUSH S4
PUSHINT 0
FALSE
FALSE
CALL $convertIntToDecStr$
CALL $appendToList$
PUSHSLICE x0a65786974434f64653a
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier exitCode
PUSH S3
PUSHINT 0
FALSE
FALSE
CALL $convertIntToDecStr$
CALL $appendToList$
PUSHSLICE x0a536f6d65206572726f722e2e2e72657472793f
CALL $storeStringInBuilders$
CALL $appendToList$
CALL $assembleList$
CALL $Terminal_no_obj_inputBoolean$
DROP2
; end function addLiquidityError

.globl	connectToPair_GetPairAddress
.public	connectToPair_GetPairAddress
.type	connectToPair_GetPairAddress, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode index
LDU 32
ENDS
;; param: index
; function connectToPair_GetPairAddress
PUSHINT 0
PUSHSLICE x456e746572204445585061697220616464726573733a
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
PUSHINT 955863441
CALL $AddressInput_no_obj_select$
DROP
; end function connectToPair_GetPairAddress
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	connectToPair_GetPairAddress_internal
.type	connectToPair_GetPairAddress_internal, @function
;; param: index
; function connectToPair_GetPairAddress
PUSHINT 0
PUSHSLICE x456e746572204445585061697220616464726573733a
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
PUSHINT 955863441
CALL $AddressInput_no_obj_select$
DROP
; end function connectToPair_GetPairAddress

.globl	connectToPair_AddressExistCheck
.public	connectToPair_AddressExistCheck
.type	connectToPair_AddressExistCheck, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode value
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: value
; function connectToPair_AddressExistCheck
; expValue
; end expValue
;; push identifier value
DUP
; colValue
PUSHINT 34
SETGLOBVAR
; end colValue
;; if
;; !
;; map.exists
;; push identifier curPairAdr
PUSHINT 34
GETGLOBVAR
;; push identifier pairs
GETGLOB 18
PUSHINT 267
DICTGET
DUP
PUSHCONT {
	NIP
}
IF
NOT
PUSHCONT {
	PUSHINT 224172601
	PUSHSLICE x5374617274696e6720636f6e6e656374696f6e2e2e2e
	NEWC
	STSLICE
	ENDC
	CALL $Terminal_no_obj_print$
}
PUSHCONT {
	PUSHINT 842683031
	PUSHSLICE x54686973207061697220616c72656164792065786973742e2e2e
	NEWC
	STSLICE
	ENDC
	CALL $Terminal_no_obj_print$
}
IFELSE
;; end if
DROP
; end function connectToPair_AddressExistCheck
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	connectToPair_AddressExistCheck_internal
.type	connectToPair_AddressExistCheck_internal, @function
;; param: value
; function connectToPair_AddressExistCheck
; expValue
; end expValue
;; push identifier value
DUP
; colValue
PUSHINT 34
SETGLOBVAR
; end colValue
;; if
;; !
;; map.exists
;; push identifier curPairAdr
PUSHINT 34
GETGLOBVAR
;; push identifier pairs
GETGLOB 18
PUSHINT 267
DICTGET
DUP
PUSHCONT {
	NIP
}
IF
NOT
PUSHCONT {
	PUSHINT 224172601
	PUSHSLICE x5374617274696e6720636f6e6e656374696f6e2e2e2e
	NEWC
	STSLICE
	ENDC
	CALL $Terminal_no_obj_print$
}
PUSHCONT {
	PUSHINT 842683031
	PUSHSLICE x54686973207061697220616c72656164792065786973742e2e2e
	NEWC
	STSLICE
	ENDC
	CALL $Terminal_no_obj_print$
}
IFELSE
;; end if
DROP
; end function connectToPair_AddressExistCheck

.globl	connectToPair
.public	connectToPair
.type	connectToPair, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; modifier alwaysAccept
ACCEPT
; function connectToPair
NULL
;; decl: pubkey
;; Remote call IDEXclient.connectPair
;; push identifier m_Client
GETGLOB 16
NEWC
STSLICECONST x497_
PUSHINT 1387451356
STUR 32
PUSHINT 2029426115
STUR 32
PUSHINT 2
STUR 8
STONE
STONE
STONE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 4
STZEROES
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST 1
PUSHINT 512
STZEROES
;; push identifier pubkey
PUSH S2
ISNULL
PUSHCONT {
	STSLICECONST 0
}
PUSHCONT {
	STSLICECONST 1
	;; push identifier pubkey
	PUSH S2
	STUR 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x710d9446
NEWC
;; pairAddr
;; push identifier curPairAdr
PUSHINT 34
GETGLOBVAR
STSLICER
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
DROP
; end function connectToPair
; end modifier alwaysAccept
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	connectToPair_internal
.type	connectToPair_internal, @function
; modifier alwaysAccept
ACCEPT
; function connectToPair
NULL
;; decl: pubkey
;; Remote call IDEXclient.connectPair
;; push identifier m_Client
GETGLOB 16
NEWC
STSLICECONST x497_
PUSHINT 1387451356
STUR 32
PUSHINT 2029426115
STUR 32
PUSHINT 2
STUR 8
STONE
STONE
STONE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 4
STZEROES
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST 1
PUSHINT 512
STZEROES
;; push identifier pubkey
PUSH S2
ISNULL
PUSHCONT {
	STSLICECONST 0
}
PUSHCONT {
	STSLICECONST 1
	;; push identifier pubkey
	PUSH S2
	STUR 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x710d9446
NEWC
;; pairAddr
;; push identifier curPairAdr
PUSHINT 34
GETGLOBVAR
STSLICER
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
DROP
; end function connectToPair
; end modifier alwaysAccept

.globl	setDataFromConnectFunc
.public	setDataFromConnectFunc
.type	setDataFromConnectFunc, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode statusConnection
LDI 1
ENDS
;; param: statusConnection
; function setDataFromConnectFunc
PUSHINT 498369253
PUSHSLICE x436f6e6e656374696f6e20636f6d706c6574652e2e2e
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
DROP
; end function setDataFromConnectFunc
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setDataFromConnectFunc_internal
.type	setDataFromConnectFunc_internal, @function
;; param: statusConnection
; function setDataFromConnectFunc
PUSHINT 498369253
PUSHSLICE x436f6e6e656374696f6e20636f6d706c6574652e2e2e
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
DROP
; end function setDataFromConnectFunc

.globl	someError
.public	someError
.type	someError, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode sdkError
LDU 32
; Decode exitCode
LDU 32
ENDS
;; param: sdkError
;; param: exitCode
; function someError
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x73646b4572726f723a20
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier sdkError
PUSH S4
PUSHINT 0
FALSE
FALSE
CALL $convertIntToDecStr$
CALL $appendToList$
PUSHSLICE x0a65786974434f64653a
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier exitCode
PUSH S3
PUSHINT 0
FALSE
FALSE
CALL $convertIntToDecStr$
CALL $appendToList$
CALL $assembleList$
CALL $Terminal_no_obj_print$
PUSHINT 842683031
PUSHSLICE x4261636b20746f206d656e752e2e2e
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
DROP2
; end function someError
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	someError_internal
.type	someError_internal, @function
;; param: sdkError
;; param: exitCode
; function someError
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x73646b4572726f723a20
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier sdkError
PUSH S4
PUSHINT 0
FALSE
FALSE
CALL $convertIntToDecStr$
CALL $appendToList$
PUSHSLICE x0a65786974434f64653a
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier exitCode
PUSH S3
PUSHINT 0
FALSE
FALSE
CALL $convertIntToDecStr$
CALL $appendToList$
CALL $assembleList$
CALL $Terminal_no_obj_print$
PUSHINT 842683031
PUSHSLICE x4261636b20746f206d656e752e2e2e
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
DROP2
; end function someError

.globl	connectErrorBool
.public	connectErrorBool
.type	connectErrorBool, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode value
LDI 1
ENDS
;; param: value
; function connectErrorBool
;; if
;; push identifier value
DUP
PUSHCONT {
	PUSHINT 224172601
	PUSHSLICE x52657472792e2e2e
	NEWC
	STSLICE
	ENDC
	CALL $Terminal_no_obj_print$
}
PUSHCONT {
	CALL $mainmenu_internal$
}
IFELSE
;; end if
DROP
; end function connectErrorBool
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	connectErrorBool_internal
.type	connectErrorBool_internal, @function
;; param: value
; function connectErrorBool
;; if
;; push identifier value
DUP
PUSHCONT {
	PUSHINT 224172601
	PUSHSLICE x52657472792e2e2e
	NEWC
	STSLICE
	ENDC
	CALL $Terminal_no_obj_print$
}
PUSHCONT {
	CALL $mainmenu_internal$
}
IFELSE
;; end if
DROP
; end function connectErrorBool

.globl	connectError
.public	connectError
.type	connectError, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode sdkError
LDU 32
; Decode exitCode
LDU 32
ENDS
;; param: sdkError
;; param: exitCode
; function connectError
PUSHINT 596694231
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x73646b4572726f723a20
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier sdkError
PUSH S4
PUSHINT 0
FALSE
FALSE
CALL $convertIntToDecStr$
CALL $appendToList$
PUSHSLICE x0a65786974434f64653a
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier exitCode
PUSH S3
PUSHINT 0
FALSE
FALSE
CALL $convertIntToDecStr$
CALL $appendToList$
PUSHSLICE x0a536f6d65206572726f722e2e2e72657472793f
CALL $storeStringInBuilders$
CALL $appendToList$
CALL $assembleList$
CALL $Terminal_no_obj_inputBoolean$
DROP2
; end function connectError
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	connectError_internal
.type	connectError_internal, @function
;; param: sdkError
;; param: exitCode
; function connectError
PUSHINT 596694231
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x73646b4572726f723a20
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier sdkError
PUSH S4
PUSHINT 0
FALSE
FALSE
CALL $convertIntToDecStr$
CALL $appendToList$
PUSHSLICE x0a65786974434f64653a
CALL $storeStringInBuilders$
CALL $appendToList$
;; push identifier exitCode
PUSH S3
PUSHINT 0
FALSE
FALSE
CALL $convertIntToDecStr$
CALL $appendToList$
PUSHSLICE x0a536f6d65206572726f722e2e2e72657472793f
CALL $storeStringInBuilders$
CALL $appendToList$
CALL $assembleList$
CALL $Terminal_no_obj_inputBoolean$
DROP2
; end function connectError

.globl	tomainmenu
.public	tomainmenu
.type	tomainmenu, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode index
LDU 32
ENDS
;; param: index
; function tomainmenu
PUSHINT 842683031
PUSHSLICE x4261636b20746f206d656e752e2e2e
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
DROP
; end function tomainmenu
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	tomainmenu_internal
.type	tomainmenu_internal, @function
;; param: index
; function tomainmenu
PUSHINT 842683031
PUSHSLICE x4261636b20746f206d656e752e2e2e
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
DROP
; end function tomainmenu

.globl	tokens_internal
.type	tokens_internal, @function
;; param: nanotokens
; function tokens
;; push identifier nanotokens
DUP
;; /
PUSHINT 1000000000
DIV
;; uint64
UFITS 64
;; decl: decimal
;; push identifier nanotokens
PUSH S1
;; -
;; push identifier decimal
PUSH S1
;; *
PUSHINT 1000000000
MUL
UFITS 64
SUB
UFITS 128
;; uint64
UFITS 64
;; decl: float
;; return
BLKDROP2 1, 2
; end function tokens

.globl	getVersion
.public	getVersion
.type	getVersion, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
PUSH S1
PUSHCONT {
	LDU 32
	GETGLOB 4
	ROT
	SETINDEXQ 5
	SETGLOB 4
}
IFNOT
; Decode input parameters
ENDS
; function getVersion
;; ret param: name
NEWC
ENDC
;; ret param: semver
PUSHINT 0
PUSHSLICE x52616469616e636520444558204c69717569646974792050726f7669646572206465626f74
NEWC
STSLICE
ENDC
PUSHINT 65536
SWAP
; expValue
; end expValue
; colValue
POP S3
; end colValue
; expValue
; end expValue
; colValue
NIP
; end colValue
;; returning named params
;; emitting 2 value(s)
PUSH S2
EQINT -1
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xb541576f
	PUSH S2
	STREFR
	PUSH S1
	STUR 24
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S2
	STREFR
	PUSH S1
	STUR 24
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP2
; end function getVersion
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getVersion_internal
.type	getVersion_internal, @function
; function getVersion
;; ret param: name
NEWC
ENDC
;; ret param: semver
PUSHINT 0
PUSHSLICE x52616469616e636520444558204c69717569646974792050726f7669646572206465626f74
NEWC
STSLICE
ENDC
PUSHINT 65536
SWAP
; expValue
; end expValue
; colValue
POP S3
; end colValue
; expValue
; end expValue
; colValue
NIP
; end colValue
;; returning named params
; end function getVersion

.globl	fetch
.public	fetch
.type	fetch, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
PUSH S1
PUSHCONT {
	LDU 32
	GETGLOB 4
	ROT
	SETINDEXQ 5
	SETGLOB 4
}
IFNOT
; Decode input parameters
ENDS
; function fetch
;; ret param: contexts
PUSHINT 0
NEWDICT
PAIR
;; returning named params
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xa5b934ca
	PUSH S1
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S1
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP
; end function fetch
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	fetch_internal
.type	fetch_internal, @function
; function fetch
;; ret param: contexts
PUSHINT 0
NEWDICT
PAIR
;; returning named params
; end function fetch

.globl	quit
.public	quit
.type	quit, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; function quit
; end function quit
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	quit_internal
.type	quit_internal, @function
; function quit
; end function quit

.globl	init_internal
.type	init_internal, @function
;; param: options
;; param: debotAbi
;; param: targetAbi
;; param: targetAddr
; function init
;; if
;; push identifier options
PUSH S3
;; &
PUSHINT 1
AND
PUSHCONT {
	; expValue
	; end expValue
	;; push identifier debotAbi
	PUSH S2
	; colValue
	SETGLOB 11
	; end colValue
}
IF
;; end if
;; if
;; push identifier options
PUSH S3
;; &
PUSHINT 2
AND
PUSHCONT {
	; expValue
	; end expValue
	;; push identifier targetAbi
	PUSH S1
	; colValue
	SETGLOB 12
	; end colValue
}
IF
;; end if
;; if
;; push identifier options
PUSH S3
;; &
PUSHINT 4
AND
PUSHCONT {
	; expValue
	; end expValue
	;; push identifier targetAddr
	DUP
	; colValue
	SETGLOB 13
	; end colValue
}
IF
;; end if
; expValue
; end expValue
;; push identifier options
PUSH S3
; colValue
SETGLOB 10
; end colValue
BLKDROP 4
; end function init

.globl	getDebotOptions
.public	getDebotOptions
.type	getDebotOptions, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
PUSH S1
PUSHCONT {
	LDU 32
	GETGLOB 4
	ROT
	SETINDEXQ 5
	SETGLOB 4
}
IFNOT
; Decode input parameters
ENDS
; function getDebotOptions
;; ret param: options
PUSHINT 0
;; ret param: debotAbi
NEWC
ENDC
;; ret param: targetAbi
NEWC
ENDC
;; ret param: targetAddr
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; push identifier m_debotAbi
GETGLOB 11
ISNULL
NOT
PUSHCONT {
	;; push identifier m_debotAbi
	GETGLOB 11
	DUP
	ISNULL
	THROWIF 63
}
PUSHCONT {
	NEWC
	ENDC
}
IFELSE
; expValue
; end expValue
; colValue
POP S3
; end colValue
;; push identifier m_targetAbi
GETGLOB 12
ISNULL
NOT
PUSHCONT {
	;; push identifier m_targetAbi
	GETGLOB 12
	DUP
	ISNULL
	THROWIF 63
}
PUSHCONT {
	NEWC
	ENDC
}
IFELSE
; expValue
; end expValue
; colValue
POP S2
; end colValue
;; push identifier m_target
GETGLOB 13
ISNULL
NOT
PUSHCONT {
	;; push identifier m_target
	GETGLOB 13
	DUP
	ISNULL
	THROWIF 63
}
PUSHCONT {
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
}
IFELSE
; expValue
; end expValue
; colValue
NIP
; end colValue
; expValue
; end expValue
;; push identifier m_options
GETGLOB 10
; colValue
POP S4
; end colValue
;; returning named params
;; emitting 4 value(s)
PUSH S4
EQINT -1
PUSHCONT {
	PUSH S6
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xfdecd0db
	PUSH S4
	STUR 8
	PUSH S3
	STREFR
	PUSH S2
	STREFR
	PUSH S1
	STSLICER
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S4
	STUR 8
	PUSH S3
	STREFR
	PUSH S2
	STREFR
	PUSH S1
	STSLICER
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
BLKDROP 4
; end function getDebotOptions
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getDebotOptions_internal
.type	getDebotOptions_internal, @function
; function getDebotOptions
;; ret param: options
PUSHINT 0
;; ret param: debotAbi
NEWC
ENDC
;; ret param: targetAbi
NEWC
ENDC
;; ret param: targetAddr
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; push identifier m_debotAbi
GETGLOB 11
ISNULL
NOT
PUSHCONT {
	;; push identifier m_debotAbi
	GETGLOB 11
	DUP
	ISNULL
	THROWIF 63
}
PUSHCONT {
	NEWC
	ENDC
}
IFELSE
; expValue
; end expValue
; colValue
POP S3
; end colValue
;; push identifier m_targetAbi
GETGLOB 12
ISNULL
NOT
PUSHCONT {
	;; push identifier m_targetAbi
	GETGLOB 12
	DUP
	ISNULL
	THROWIF 63
}
PUSHCONT {
	NEWC
	ENDC
}
IFELSE
; expValue
; end expValue
; colValue
POP S2
; end colValue
;; push identifier m_target
GETGLOB 13
ISNULL
NOT
PUSHCONT {
	;; push identifier m_target
	GETGLOB 13
	DUP
	ISNULL
	THROWIF 63
}
PUSHCONT {
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
}
IFELSE
; expValue
; end expValue
; colValue
NIP
; end colValue
; expValue
; end expValue
;; push identifier m_options
GETGLOB 10
; colValue
POP S4
; end colValue
;; returning named params
; end function getDebotOptions

.macro c7_to_c4
GETGLOB 2
NEWC
STU 256
GETGLOB 3
STUR 64
GETGLOB 6
STUR 1
NEWC
NEWC
GETGLOB 28
GETGLOB 29
XCHG s2
STREF
STREF
GETGLOB 13
GETGLOB 14
GETGLOB 19
GETGLOB 24
GETGLOB 25
GETGLOB 17
REVERSE 8, 0
STBREF
SWAP
DUP
ISNULL
NOT
PUSHCONT {
	NEWC
	STSLICE
	SWAP
	STSLICECONST 1
	STBREF
}
PUSHCONT {
	DROP
	STSLICECONST 0
}
IFELSE
STREF
STSLICE
STSLICE
STSLICE
STDICT
NEWC
GETGLOB 18
GETGLOB 20
UNTUPLE 2
GETGLOB 27
GETGLOB 30
GETGLOB 31
PUSHINT 32
GETGLOBVAR
PUSHINT 33
GETGLOBVAR
PUSHINT 34
GETGLOBVAR
GETGLOB 21
GETGLOB 22
UNTUPLE 2
REVERSE 13, 0
STDICT
STU 32
STDICT
STU 128
STU 128
STU 128
STU 128
STU 128
STSLICE
STDICT
STU 32
STDICT
GETGLOB 10
GETGLOB 11
GETGLOB 12
GETGLOB 15
GETGLOB 16
GETGLOB 23
GETGLOB 26
REVERSE 10, 0
STBREF
STBREF
STU 8
SWAP
DUP
ISNULL
NOT
PUSHCONT {
	NEWC
	STREF
	SWAP
	STSLICECONST 1
	STBREF
}
PUSHCONT {
	DROP
	STSLICECONST 0
}
IFELSE
SWAP
DUP
ISNULL
NOT
PUSHCONT {
	NEWC
	STREF
	SWAP
	STSLICECONST 1
	STBREF
}
PUSHCONT {
	DROP
	STSLICECONST 0
}
IFELSE
STU 128
STSLICE
STU 128
STU 128
ENDC
POP C4

.macro c4_to_c7
PUSHROOT
CTOS        ; c4
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDU 1       ; pubkey [timestamp] constructor_flag memory
LDREFRTOS
LDREFRTOS
LDREF
PLDREF
SETGLOB 29
SETGLOB 28
LDOPTREF
SWAP
DUP
ISNULL
PUSHCONT {
	CTOS
	LDMSGADDR
	DROP
}
IFNOT
SETGLOB 13
LDREF
LDMSGADDR
LDMSGADDR
LDMSGADDR
PLDDICT
SETGLOB 17
SETGLOB 25
SETGLOB 24
SETGLOB 19
SETGLOB 14
LDREFRTOS
LDDICT
LDU 32
LDDICT
ROTREV
PAIR
SETGLOB 20
LDU 128
LDU 128
LDU 128
LDU 128
LDU 128
LDMSGADDR
LDDICT
LDU 32
PLDDICT
PAIR
SETGLOB 22
SETGLOB 21
PUSHINT 34
SETGLOBVAR
PUSHINT 33
SETGLOBVAR
PUSHINT 32
SETGLOBVAR
SETGLOB 31
SETGLOB 30
SETGLOB 27
SETGLOB 18
LDU 8
LDOPTREF
SWAP
DUP
ISNULL
PUSHCONT {
	CTOS
	PLDREF
}
IFNOT
SETGLOB 11
LDOPTREF
SWAP
DUP
ISNULL
PUSHCONT {
	CTOS
	PLDREF
}
IFNOT
SETGLOB 12
LDU 128
LDMSGADDR
LDU 128
PLDU 128
SETGLOB 26
SETGLOB 23
SETGLOB 16
SETGLOB 15
SETGLOB 10
TRUE
SETGLOB 1   ; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; D
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS        ; c4
DUP        ; c4 c4
SBITS      ; c4 bits
GTINT 1    ; c4 bits>1
PUSHCONT {
	LDU 256      ; pubkey c4
	LDU 64      ; pubkey timestamp c4
	LDU 1       ; pubkey [timestamp] constructor_flag memory
	LDREFRTOS
	LDREFRTOS
	LDREF
	PLDREF
	SETGLOB 29
	SETGLOB 28
	LDOPTREF
	SWAP
	DUP
	ISNULL
	PUSHCONT {
		CTOS
		LDMSGADDR
		DROP
	}
	IFNOT
	SETGLOB 13
	LDREF
	LDMSGADDR
	LDMSGADDR
	LDMSGADDR
	PLDDICT
	SETGLOB 17
	SETGLOB 25
	SETGLOB 24
	SETGLOB 19
	SETGLOB 14
	LDREFRTOS
	LDDICT
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SETGLOB 20
	LDU 128
	LDU 128
	LDU 128
	LDU 128
	LDU 128
	LDMSGADDR
	LDDICT
	LDU 32
	PLDDICT
	PAIR
	SETGLOB 22
	SETGLOB 21
	PUSHINT 34
	SETGLOBVAR
	PUSHINT 33
	SETGLOBVAR
	PUSHINT 32
	SETGLOBVAR
	SETGLOB 31
	SETGLOB 30
	SETGLOB 27
	SETGLOB 18
	LDU 8
	LDOPTREF
	SWAP
	DUP
	ISNULL
	PUSHCONT {
		CTOS
		PLDREF
	}
	IFNOT
	SETGLOB 11
	LDOPTREF
	SWAP
	DUP
	ISNULL
	PUSHCONT {
		CTOS
		PLDREF
	}
	IFNOT
	SETGLOB 12
	LDU 128
	LDMSGADDR
	LDU 128
	PLDU 128
	SETGLOB 26
	SETGLOB 23
	SETGLOB 16
	SETGLOB 15
	SETGLOB 10
	TRUE
	SETGLOB 1   ; pubkey [timestamp] constructor_flag
	SETGLOB 6   ; pubkey [timestamp]
	SETGLOB 3   ; D
	SETGLOB 2
}
PUSHCONT {
	PLDDICT   ; D
	; init m_clientBalanceTon
	PUSHINT 0
	SETGLOB 15
	; init m_Client
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 16
	; init PairWallets
	NEWDICT
	SETGLOB 17
	; init pairs
	NEWDICT
	SETGLOB 18
	; init m_DexRootAddress
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 19
	; init clientPairKeys
	PUSHINT 0
	NEWDICT
	PAIR
	SETGLOB 20
	; init wallets
	NEWDICT
	SETGLOB 21
	; init clientWalletKeys
	PUSHINT 0
	NEWDICT
	PAIR
	SETGLOB 22
	; init bb
	PUSHINT 0
	SETGLOB 23
	; init m_pairReturnLiq
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 24
	; init m_liquidPair
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 25
	; init balanceReserveAS
	PUSHINT 0
	SETGLOB 26
	; init balanceReserveBS
	PUSHINT 0
	SETGLOB 27
	; init nF
	NEWC
	ENDC
	SETGLOB 28
	; init nS
	NEWC
	ENDC
	SETGLOB 29
	; init balCurrA
	PUSHINT 0
	SETGLOB 30
	; init m_liquidValA
	PUSHINT 0
	SETGLOB 31
	; init balCurrB
	PUSHINT 0
	PUSHINT 32
	SETGLOBVAR
	; init m_liquidValB
	PUSHINT 0
	PUSHINT 33
	SETGLOBVAR
	; init curPairAdr
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 34
	SETGLOBVAR
	; init m_options
	PUSHINT 0
	SETGLOB 10
	; init m_debotAbi
	NULL
	SETGLOB 11
	; init m_targetAbi
	NULL
	SETGLOB 12
	; init m_target
	NULL
	SETGLOB 13
	; init empty
	NEWC
	ENDC
	SETGLOB 14
	; set contract pubkey
	PUSHINT 0
	SWAP
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
	TRUE
	SETGLOB 1
}
IFELSE

.internal-alias :main_internal,        0
.internal	:main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
PUSHINT 0  ; main_external trans id
PUSH S2
CTOS
LDU 4       ; bounced tail
LDMSGADDR   ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
GETGLOB 4
TRUE
SETINDEXQ 1
PUSHINT 10000000
SETINDEXQ 2
NULL
SETINDEXQ 3
PUSHINT 1
SETINDEXQ 4
SETGLOB 4
IFRET
PUSH S1    ; body
SEMPTY     ; isEmpty
IFRET
PUSH S1 ; body
LDU 32  ; funcId body'
PUSH S1 ; funcId body' funcId
IFNOTRET
PUSH S1 ; funcId body' funcId
LESSINT 3            ; funcId body' funcId<3
PUSH S2              ; funcId body' funcId<3 funcId
PUSHINT 4294967293   ; funcId body' funcId<3 funcId 4294967293
GREATER              ; funcId body' funcId<3 funcId>4294967293
OR                   ; funcId body' funcId<3||funcId>4294967293
PUSHCONT {
	DROP2
	THROW 60
}
IFJMP
SWAP    ; body funcId
CALL 1
GETGLOB 7
ISNULL
PUSHCONT {
	DROP
	THROW 60
}
IF

.internal-alias :main_external,        -1
.internal	:main_external
PUSHINT -1 ; main_external trans id
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 9
PUSH S1
CALL $c4_to_c7_with_init_storage$
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice
	LDU 1 ; signatureSlice hashMsgSlice havePubkey msgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice havePubkey
	PUSHCONT {
		LDU 256       ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG s3
		SWAP
	}
	PUSHCONT {
		XCHG s2
		GETGLOB 2
	}
	IFELSE
	DUP
	SETGLOB 5
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
PUSHCONT {
	LDU 1      ; havePubkey msgSlice
	SWAP       ; msgSlice havePubkey
	THROWIF 58 ; msgSlice
}
IFELSE
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU 32  ; expireAt msgSlice
SWAP    ; msgSlice expireAt
NOW     ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU  32 ; funcId body
PUSH S1 ; funcId body funcId
LESSINT 3            ; funcId body' funcId<3
PUSH S2              ; funcId body' funcId<3 funcId
PUSHINT 4294967293   ; funcId body' funcId<3 funcId 4294967293
GREATER              ; funcId body' funcId<3 funcId>4294967293
OR                   ; funcId body' funcId<3||funcId>4294967293
PUSHCONT {
	DROP2
	THROW 60
}
IFJMP
SWAP    ; body funcId
CALL 1
GETGLOB 7
ISNULL
PUSHCONT {
	DROP
	THROW 60
}
IF

.globl	AddressInput_with_obj_select
.type	AddressInput_with_obj_select, @function
;; param: answerId
; function select
;; address.makeAddrStd()
PUSHSLICE x9c3afda37b1cc4610e222de8a45cb1be15278aa418ade95bc47de7b12335308ca77_
;; decl: addr
;; Remote call IAddressInput.select
;; push identifier addr
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x20cde9b8
;; answerId
;; push identifier answerId
PUSH S2
STUR 32
ENDC
PUSHINT 1
SENDRAWMSG
DROP
; end function select

.globl	AddressInput_no_obj_select
.type	AddressInput_no_obj_select, @function
;; param: answerId
; function select
;; address.makeAddrStd()
PUSHSLICE x9c3afda37b1cc4610e222de8a45cb1be15278aa418ade95bc47de7b12335308ca77_
;; decl: addr
;; Remote call IAddressInput.select
;; push identifier addr
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x20cde9b8
;; answerId
;; push identifier answerId
PUSH S2
STUR 32
ENDC
PUSHINT 1
SENDRAWMSG
DROP2
; end function select

.globl	Menu_with_obj_select
.type	Menu_with_obj_select, @function
;; param: title
;; param: description
;; param: items
; function select
;; address.makeAddrStd()
PUSHSLICE x9c358349a7d9d4465c92f07be94475030479b94640bb8b19a4189b64b384ac0b691_
;; decl: addr
;; Remote call IMenu.select
;; push identifier addr
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x69814639
;; title
;; push identifier title
PUSH S4
STREFR
;; description
;; push identifier description
PUSH S3
STREFR
;; items
;; push identifier items
PUSH S2
UNPAIR
XCHG s2
STU 32
STDICT
ENDC
PUSHINT 1
SENDRAWMSG
BLKDROP 3
; end function select

.globl	Menu_no_obj_select
.type	Menu_no_obj_select, @function
;; param: title
;; param: description
;; param: items
; function select
;; address.makeAddrStd()
PUSHSLICE x9c358349a7d9d4465c92f07be94475030479b94640bb8b19a4189b64b384ac0b691_
;; decl: addr
;; Remote call IMenu.select
;; push identifier addr
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x69814639
;; title
;; push identifier title
PUSH S4
STREFR
;; description
;; push identifier description
PUSH S3
STREFR
;; items
;; push identifier items
PUSH S2
UNPAIR
XCHG s2
STU 32
STDICT
ENDC
PUSHINT 1
SENDRAWMSG
BLKDROP 4
; end function select

.globl	Sdk_with_obj_getBalance
.type	Sdk_with_obj_getBalance, @function
;; param: answerId
;; param: addr
; function getBalance
;; address.makeAddrStd()
PUSHSLICE x9c31f8c8a9f200e593e3eda66275c2c11ec9e940cc18d5d3e858d16d4f3c5437897_
;; decl: a
;; Remote call ISdk.getBalance
;; push identifier a
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x0036b4f3
;; answerId
;; push identifier answerId
PUSH S3
STUR 32
;; addr
;; push identifier addr
PUSH S2
STSLICER
ENDC
PUSHINT 1
SENDRAWMSG
DROP2
; end function getBalance

.globl	Sdk_no_obj_getBalance
.type	Sdk_no_obj_getBalance, @function
;; param: answerId
;; param: addr
; function getBalance
;; address.makeAddrStd()
PUSHSLICE x9c31f8c8a9f200e593e3eda66275c2c11ec9e940cc18d5d3e858d16d4f3c5437897_
;; decl: a
;; Remote call ISdk.getBalance
;; push identifier a
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x0036b4f3
;; answerId
;; push identifier answerId
PUSH S3
STUR 32
;; addr
;; push identifier addr
PUSH S2
STSLICER
ENDC
PUSHINT 1
SENDRAWMSG
BLKDROP 3
; end function getBalance

.globl	Terminal_with_obj_inputUint
.type	Terminal_with_obj_inputUint, @function
;; param: answerId
;; param: prompt
; function inputUint
;; address.makeAddrStd()
PUSHSLICE x9c30f2ca6c6cddc430a5b6adb996c178ac8b316c3190cbf8a1916356e81774251c7_
;; decl: addr
;; Remote call ITerminal.inputUint
;; push identifier addr
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x19bd92bb
;; answerId
;; push identifier answerId
PUSH S3
STUR 32
;; prompt
;; push identifier prompt
PUSH S2
STREFR
ENDC
PUSHINT 1
SENDRAWMSG
DROP2
; end function inputUint

.globl	Terminal_no_obj_inputUint
.type	Terminal_no_obj_inputUint, @function
;; param: answerId
;; param: prompt
; function inputUint
;; address.makeAddrStd()
PUSHSLICE x9c30f2ca6c6cddc430a5b6adb996c178ac8b316c3190cbf8a1916356e81774251c7_
;; decl: addr
;; Remote call ITerminal.inputUint
;; push identifier addr
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x19bd92bb
;; answerId
;; push identifier answerId
PUSH S3
STUR 32
;; prompt
;; push identifier prompt
PUSH S2
STREFR
ENDC
PUSHINT 1
SENDRAWMSG
BLKDROP 3
; end function inputUint

.globl	Terminal_with_obj_inputBoolean
.type	Terminal_with_obj_inputBoolean, @function
;; param: answerId
;; param: prompt
; function inputBoolean
;; address.makeAddrStd()
PUSHSLICE x9c30f2ca6c6cddc430a5b6adb996c178ac8b316c3190cbf8a1916356e81774251c7_
;; decl: addr
;; Remote call ITerminal.inputBoolean
;; push identifier addr
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x3ac49b5f
;; answerId
;; push identifier answerId
PUSH S3
STUR 32
;; prompt
;; push identifier prompt
PUSH S2
STREFR
ENDC
PUSHINT 1
SENDRAWMSG
DROP2
; end function inputBoolean

.globl	Terminal_no_obj_inputBoolean
.type	Terminal_no_obj_inputBoolean, @function
;; param: answerId
;; param: prompt
; function inputBoolean
;; address.makeAddrStd()
PUSHSLICE x9c30f2ca6c6cddc430a5b6adb996c178ac8b316c3190cbf8a1916356e81774251c7_
;; decl: addr
;; Remote call ITerminal.inputBoolean
;; push identifier addr
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x3ac49b5f
;; answerId
;; push identifier answerId
PUSH S3
STUR 32
;; prompt
;; push identifier prompt
PUSH S2
STREFR
ENDC
PUSHINT 1
SENDRAWMSG
BLKDROP 3
; end function inputBoolean

.globl	Terminal_with_obj_print
.type	Terminal_with_obj_print, @function
;; param: answerId
;; param: message
; function print
;; address.makeAddrStd()
PUSHSLICE x9c30f2ca6c6cddc430a5b6adb996c178ac8b316c3190cbf8a1916356e81774251c7_
;; decl: addr
;; Remote call ITerminal.print
;; push identifier addr
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x0ce649c2
;; answerId
;; push identifier answerId
PUSH S3
STUR 32
;; message
;; push identifier message
PUSH S2
STREFR
ENDC
PUSHINT 1
SENDRAWMSG
DROP2
; end function print

.globl	Terminal_no_obj_print
.type	Terminal_no_obj_print, @function
;; param: answerId
;; param: message
; function print
;; address.makeAddrStd()
PUSHSLICE x9c30f2ca6c6cddc430a5b6adb996c178ac8b316c3190cbf8a1916356e81774251c7_
;; decl: addr
;; Remote call ITerminal.print
;; push identifier addr
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x0ce649c2
;; answerId
;; push identifier answerId
PUSH S3
STUR 32
;; message
;; push identifier message
PUSH S2
STREFR
ENDC
PUSHINT 1
SENDRAWMSG
BLKDROP 3
; end function print

